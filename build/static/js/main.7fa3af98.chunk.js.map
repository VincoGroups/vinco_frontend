{"version":3,"sources":["NonAuth/Comps/Nav.js","NonAuth/Home.js","ServerSide/Service/config.js","ServerSide/basefile.js","Security/Encryption.js","NonAuth/Login.js","ServerSide/PrivateRoute.js","Auth/Authcomps/Useraccount.js","Auth/Authcomps/Authnav.js","ServerSide/functions.js","Comps/Loadingwhite.js","Comps/WholeLoadingWhite.js","Auth/Dash.js","Auth/Search.js","NonAuth/Register.js","Comps/Loadingblue.js","Auth/Authcomps/Group/BoxFiler/Fileview.js","Auth/Authcomps/Group/BoxFiler/BoxFiler.js","Auth/Authcomps/Group/Connections/Connectionhome.js","ServerSide/Filters/FilterUsersAdd.js","Auth/Authcomps/Group/Subgroups/functions/Adduserssubgroup.js","Auth/Authcomps/Group/Subgroups/Subgrouphome.js","Auth/Authcomps/Group/Posts/Posts.js","Auth/Authcomps/Group/Group.js","Auth/Pendinggroups.js","Auth/Authcomps/Subgroup/Subposts.js","Auth/Authcomps/Subgroup/SubBox.js","Auth/Authcomps/Subgroup/SubHome.js","Auth/Authcomps/Connections/Connectionpage.js","App.js","index.js"],"names":["Nav","className","to","React","Component","Home","axios","get","then","body","console","log","catch","error","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseConfig","firebase","length","key","SimpleCrypto","generateRandom","Math","floor","random","SecurityConfig","text","encrypt","DecodeConfig","decrypt","Login","useState","email","setEmail","password","setPassword","loggedin","loggedinvariable","setLogin","type","onChange","e","target","value","required","name","onClick","preventDefault","auth","signInWithEmailAndPassword","PrivateRoute","component","isAuthenticated","rest","render","props","Useraccount","AccountModal","accountmodal","setState","signOut","state","this","Authnav","modal","remindermodal","setReminder","reminders","setReminders","detailsmodal","setDetailsModal","details","detailsreminder","setDetails","useEffect","currentUser","uid","data","errors","ReminderPost","substring","OutputReminders","map","item","indexOf","postremindertime","groupname","reminderpost","modalreminderdetails","usernames","index","generateId","result","characters","charactersLength","i","charAt","MinimizeBigTitle","LoadingWhite","loading","LoadingModalPage","content","Dash","connectionsres","setConnectionRes","subres","setSubRes","response","setResponse","modalopened","setModalOpened","setLoading","groupoutput","setGroupOutput","subgroupoutput","setSubGroupOutput","connectiongroups","setConnectionGroups","finalgroupname","setFinalGroupName","creatinggroup","setCreatingGroup","componentMounted","useRef","current","setTimeout","clientid","groupapi","grouptype","maingroupapi","subgroupapi","subgroupname","connectiongroupapi","connectionname","allusers","setAllusers","setGroupName","groupdescription","setGroupDescription","usersadded","suggestions","setSuggestions","setGroupType","subComponentMounted","newbody","filter","useruid","suggestionsmade","regex","RegExp","sort","v","test","firstname","lastname","push","users","adminusers","creator","replace","post","headers","Search","setClientId","clientgroupmodal","setClientGroupModal","userresponse","setUserResponse","bod","StatusBtn","status","includes","put","groupid","Register","setFirstName","setLastName","setLoggedIn","validator","validate","JSON","stringify","LoadingBlue","statement","FileViewer","url","callback","file","src","title","alt","FileNotes","filenotes","boxfilerid","currentfolderid","currentfileid","currentfilename","notesres","setNotesRes","notesform","setNotesForm","currentnote","setCurrentNote","datapositionleft","setDataPositionLeft","datapositionright","setDataPositionRight","stylepointleft","setStylePointLeft","stylepointright","setStylePointRight","notemodal","setNoteModal","fetchFileNotes","useCallback","style","displaydate","notepost","event","pos_x","nativeEvent","offsetX","pos_y","offsetY","left_position","toString","top_position","left","styleleft","top","styleright","notesinput","setNotesInput","timestamp","Date","backendpointleft","backendpointright","folderid","fileid","noteidentification","notedate","displayName","getMonth","getDate","getFullYear","FileComments","filecomment","outputfilecomment","setOutputFileComment","outputfileres","setOutputFileRes","loadingfile","setLoadingFile","fetchFileComments","onKeyDown","keyCode","outputdata","comment","date","displayname","commentid","CommentOutput","placeholder","BoxFiler","boxfiler","foldermodal","setFolderModal","addfilemodal","setAddFileModal","groupresp","groupres","setGroupRes","setCurrentFolderId","currentfoldername","setCurrentFolderName","setCurrentFileName","setCurrentFileId","currentfiletype","setCurrentFileType","outputfile","setOutputFile","setUrl","commentfile","setCommentFile","notescomment","setNotesComment","fetchFolders","foldername","document","getElementById","classList","contains","remove","add","files","id","storage","ref","filename","getDownloadURL","xhr","XMLHttpRequest","responseType","onload","blob","open","send","filetype","setFolderName","onDrop","dataTransfer","filedata","filejson","size","res","j","onDragOver","onDragLeave","multiple","ConnectionsHome","connectionhome","groupclientid","pageload","setPageLoad","connectionsmade","setConnectionsMade","connectionmodal","setConnectionModal","connectionResults","setConnectionResult","requestconnection","setRequestConnection","finalconnectionname","setFinalConnectionName","setError","ErrorMsg","errormessage","requestmodal","connectioninput","setConnectionInput","setConnectionName","pendingConnections","setPendingConnections","PendingGroups","pendingGroups","setPendingGroups","subComponent","responseclientid","requestedclientid","pathconnectionid","pendingpage","connectionresults","currentrequest","requestedgroupname","responsegroupname","FilterUsers","cardstyle","buttonstyle","api","setUsers","suggestionarray","fetch","json","method","Adduserssubgroup","RenderSuggestions","array","ManipulateInput","bodyarray","forEach","Subgrouphome","fetchSubgroups","subgroupres","SwitchTitleSubgroup","OutputSubgroups","CreateSubGroup","subgroupmodal","checked","areyouinthissubgroup","subgroupaddedmembers","subgroupdescription","subgroupmembers","subgroupid","subgrouppost","subboxfiler","subchat","subid","mainboxfilerid","maingroupname","subgroupusers","Subgroup","subgroupcomp","Posts","visible","wallpostid","postres","setPostRes","modalpost","setModalPost","currentpost","setCurrentPost","newbod","a","b","reverse","postshow","setPostShow","postitle","posttitle","setPostTitle","setPost","message","posttype","reminderform","setReminderForm","reminderdate","setReminderDate","remindertime","setReminderTime","setReminderPost","montharray","month","Number","monthtitle","getMonthAndDate","time","hours","timesplit","split","meridian","timedisplay","backenddate","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","usertitle","Loadingblue","showmodalpost","show","setShow","commentinput","setCommentInput","fetchComments","postid","commentdata","Group","setBoxFiler","wallpost","setWallPost","groupconnectivity","setGroupConnectivity","subcomp","setSubComp","userdetails","setUsersDetails","groupdetails","setGroupDetails","leavegroupmodal","setLeaveGroupModal","addusersmodal","setAddUsersModal","subgroups","setSubGroups","match","params","history","AdminPortal","adminportal","adminpage","showAdminPage","setAdminPage","adminoptions","showAdminOptions","setAdminOptions","admintitle","showAdminTitle","setAdminTitles","nonadminusers","setNonAdminUsers","titleadminusers","setTitleAdminUsers","OutputOptionsUser","delete","OutputTitleUsers","outputtitle","typeofgroup","subgroupsid","adminuser","setAdminUser","subComp","fetchAdminStatus","undefined","Pendinggroups","setRes","showdetails","setShowDetails","dets","setDets","SubPostsComments","subpostid","commentsres","Comments","showcomments","MakeComment","Subposts","fetchSubPosts","subpostres","MainGroupFolderSelect","maingroupfolder","mainboxres","groupboxfilerid","fileurl","CreatePostSub","createpostmodal","subpostinput","getHours","getMinutes","servertimestamp","Output","postmodal","PostModal","subinputfile","SubPostShow","subposts","SubBoxComments","fetchCommentsOnFile","subboxid","commentres","MakeCommentOnSubPost","OutputComments","SubBox","subboxres","AddSubFilesModal","FileAddModal","addModal","addfilefoldername","OutputFolders","currentfile","currentfileurl","outputfilemodal","OutputFile","CreateFolder","createfolder","createfoldername","SubShowBox","subboxshow","SubHome","subpost","subbox","mainapi","subapi","subboxfilerid","ConnectionPage","connectionresponse","setConnectionResponse","connectionapi","App","setAuth","componentDidMount","onAuthStateChanged","user","basename","path","exact","ReactDOM"],"mappings":"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","file":"static/js/main.7fa3af98.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom'\n\nclass Nav extends React.Component{\n    render() {\n        return (\n            <div>\n              <div className=\"NANav\">\n               <div className=\"container\">\n               <div className=\"row\">\n                <div className=\"col-md-9\">\n                 <h5>VINCO</h5>\n                </div>\n                <div className=\"col-md-3\">\n                 <div className=\"float-right\">\n                  <div className=\"row\">\n                  <div className=\"col-md-4\">\n                   <NavLink className=\"navlink\" to =\"/\"><h6>HOME</h6></NavLink>\n                  </div>\n                  <div className=\"col-md-4\">\n                   <NavLink className=\"navlink\" to =\"/Register\"><h6>REGISTER</h6></NavLink>\n                  </div>\n                  <div className=\"col-md-4\">\n                   <NavLink className=\"navlink\" to =\"/Login\"><h6>LOGIN</h6></NavLink>\n                  </div>\n                  </div>\n                 </div>\n                </div>\n               </div>\n               </div>\n              </div>\n            </div>\n        )\n    }\n}\n\nexport default Nav;","import React from 'react';\nimport Nav from './Comps/Nav';\nimport axios from 'axios'\n\nconst Home = () =>  {\n    axios.get(\"https://vincobackend.herokuapp.com/testing/apptesting\")\n    .then(body => {\n        console.log(body)\n    }).catch((error) => {\n        console.log(error)\n    })\n        return (\n            <div>\n             <Nav/>\n             <div className=\"page\">\n              <div className=\"landing-page\">\n                <div className=\"container\">\n                <h1>VINCO</h1>\n                </div>\n              </div>\n             </div>\n            </div>\n        )\n}\n\nexport default Home;","const config = {\n    apiKey: \"AIzaSyAYG1tyHn18QkRCgB1Cl6EeQf1XSSWbfc4\",\n    authDomain: \"vinco-6a779.firebaseapp.com\",\n    databaseURL: \"https://vinco-6a779.firebaseio.com\",\n    projectId: \"vinco-6a779\",\n    storageBucket: \"vinco-6a779.appspot.com\",\n    messagingSenderId: \"644771519829\",\n    appId: \"1:644771519829:web:361b9229a36e4eaa0263dc\"\n  };\n\n\n  export default config;","import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/storage';\nimport config from './Service/config';\n\nvar firebaseConfig = {\n    apiKey: config.apiKey,\n    authDomain: config.authDomain,\n    databaseURL: config.databaseURL,\n    projectId: config.projectId,\n    storageBucket: config.storageBucket,\n    messagingSenderId: config.messagingSenderId,\n    appId: config.appId\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export default !firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app();","import SimpleCrypto from 'simple-crypto-js';\n\nconst key = SimpleCrypto.generateRandom(Math.floor(Math.random()*300));\n\nexport const SecurityConfig = (text) => {\n    const cryption = new SimpleCrypto(key);\n\n    return cryption.encrypt(text);\n}\n\nexport const DecodeConfig = (text) => {\n    const decode = new SimpleCrypto(key);\n     \n    return decode.decrypt(text);\n}\n","import React, {useState} from 'react';\nimport Nav from './Comps/Nav';\nimport firebase from '../ServerSide/basefile';\nimport {Redirect} from 'react-router-dom';\nimport {SecurityConfig , DecodeConfig} from '../Security/Encryption';\n\nconst Login = () => {\n    const [email, setEmail] = useState({\n        email: ''\n    })\n    const [password, setPassword] = useState({\n        password: ''\n    })\n    const [loggedinvariable, setLogin] = useState({\n        loggedin: false\n    })\n    \n   const loginFunction = (e) => {\n        e.preventDefault();\n        firebase.auth().signInWithEmailAndPassword(DecodeConfig(email.email) , DecodeConfig(password.password))\n        .then(() => {\n         setLogin({\n            loggedin: true\n          })\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n\n    const {loggedin} = loggedinvariable;\n        if (loggedin) {\n            return <Redirect to=\"/dash\" />\n        }\n\n    return (\n        <div>\n         <Nav/>\n          <div className=\"page\">\n           <div className=\"login-page\">\n            <div className=\"login-container\">\n            <div className=\"container\">\n             <h1 className=\"text-center\">LOGIN</h1>\n             <div className=\"input-container\">\n                 <div className=\"group\">      \n                    <input type=\"text\" className=\"inputbar\" onChange={(e) => {\n                        setEmail({\n                          email: SecurityConfig(e.target.value)\n                        })\n                    }} required />\n                    <span className=\"highlight\"></span>\n                    <span className=\"bar\"></span>\n                    <label className=\"labelbar\">Name</label>\n                  </div>\n              </div>\n              <div className=\"input-container\">\n                 <div className=\"group\">      \n                    <input type=\"password\" className=\"inputbar\" name=\"password\" onChange={(e) => {\n                        setPassword({\n                          password: SecurityConfig(e.target.value)\n                        })\n                    }} required />\n                    <span className=\"highlight\"></span>\n                    <span className=\"bar\"></span>\n                    <label className=\"labelbar\">Password</label>\n                  </div>\n              </div>\n              <div className=\"input-container\">\n                <div className=\"longbutton text-center\" onClick={loginFunction}>LOGIN</div>\n              </div>\n            </div>\n            </div>\n           </div>\n          </div>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n\nexport default function PrivateRoute({ component: Component, isAuthenticated,...rest}){\n    return (\n        <Route {...rest} render={(props) => (\n            isAuthenticated === true\n              ? <Component {...props} />\n              : <Redirect to='/login' />\n          )} />\n    )\n}\n","import React from 'react';\nimport firebase from '../../ServerSide/basefile'\n\nclass Useraccount extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            accountmodal: false\n        }\n    }\n\n    AccountModal = ({accountmodal}) => {\n        if (accountmodal === true) {\n            return (\n                <div>\n                 <div className=\"modal-edu\">\n                  <div className=\"container\">\n                    <div className=\"modal-padding\">\n                     <div className=\"modal-container\">\n                      <span className=\"closebtndark\" onClick={() => {\n                          this.setState({\n                              accountmodal: false\n                          })\n                      }}>&times;</span>\n                      <h3>ACCOUNT</h3>\n                      <h4>hello</h4>\n                      <button className=\"button-logout\" onClick={() => {\n                         firebase.auth().signOut();\n                     }}>LOGOUT</button>\n                     </div>\n                    </div>\n                  </div>\n                 </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n             <button className=\"button-submit\" onClick={() => {\n                this.setState({\n                    accountmodal: true\n                })\n             }}>ACCOUNT</button>\n             <this.AccountModal accountmodal={this.state.accountmodal}/>\n            </div>\n        )\n    }\n}\n\nexport default Useraccount;","import React, {useState , useEffect} from 'react';\nimport Useraccount from './Useraccount';\nimport {NavLink} from 'react-router-dom';\nimport firebase from '../../ServerSide/basefile'\nimport axios from 'axios';\nconst Authnav = () => {\n\n  const [remindermodal , setReminder] = useState({\n      modal: false\n  })\n\n  const [reminders, setReminders] = useState({\n    reminders: []\n  })\n\n  const [detailsmodal, setDetailsModal] = useState({\n    detailsmodal: false\n  })\n\n  const [detailsreminder , setDetails] = useState({\n    details: []\n  })\n\n  useEffect(() => {\n    axios.get('https://vincobackend.herokuapp.com/api/reminders/fetchreminders/' + firebase.auth().currentUser.uid)\n    .then((body) => {\n      setReminders({\n        reminders: body.data\n      })\n    }).catch((errors) => {\n      console.log(errors);\n    })\n  }, [])\n\n\n  const ReminderPost = ({text}) => {\n    if (text.length > 25) {\n      return <h4>{text.substring(0,26) + ' ...'}</h4>\n    } else {\n      return <h4>{text}</h4>\n    }\n  }\n  \n\n  const OutputReminders = () => {\n    return (\n      <div>\n         <div className=\"row\">\n         {\n            reminders.reminders.map((item) => (\n              <div key={reminders.reminders.indexOf(item)}>\n                <div className=\"reminder-padding\">\n                  <div className=\"slightshadow\">\n                  <div className=\"reminder-card-headers\">\n                    <div className=\"float-right\">\n                      <h6 className=\"small-text\">{item.postremindertime}</h6>\n                    </div>\n                    <h6>{item.groupname}</h6>\n                  </div>\n                  <div className=\"reminder-container\" onClick={() => {\n                    setDetails({\n                      details: item\n                    })\n                    setDetailsModal({\n                      detailsmodal: true\n                    })\n                  }}>\n                    <ReminderPost text={item.reminderpost}/>\n                  </div>\n                  </div>\n                </div>\n              </div>         \n            ))\n          }\n         </div>\n      </div>\n    )\n  }\n\n const ModalReminderDetails = ({modalreminderdetails, item}) => {\n    if (modalreminderdetails === true) {\n        return (\n            <div className=\"modal-edu\">\n             <div className=\"container\">\n              <div className=\"modal-padding\">\n                <div className=\"modal-container-blue\">\n                 <span className=\"closebtnwhite\" onClick={() => {\n                   setDetailsModal({\n                     detailsmodal: false\n                   })\n                 }}>&times;</span>\n                 <div className=\"reminder-container-details\">\n                  <h4>{item.reminderpost}</h4>\n                   <div className=\"reminder-subcontainer\">\n                    <div className=\"input-container\">\n                     <div className=\"row\">\n                        {\n                          item.usernames.map((index) => (\n                            <div key={item.usernames.indexOf(index)}>\n                              <div className=\"small-container\">\n                                <h6 className=\"small-name-padding\">{index}</h6>\n                              </div>\n                            </div>\n                          ))\n                        }\n                     </div>\n                    </div>\n                   </div>\n                 </div>\n                </div>\n              </div>\n             </div>\n            </div>\n        )\n    } else {\n      return null;\n    }\n   }\n\n  const ModalReminder = ({remindermodal}) => {\n    if (remindermodal === true) {\n      return (\n        <div>\n          <div className=\"modal-edu\">\n            <div className=\"container\">\n              <div className=\"modal-padding\">\n                <div className=\"modal-container\">\n                  <span className=\"closebtndark\" onClick={() => {\n                    setReminder({\n                      modal: false\n                    })\n                  }}>&times;</span>\n                  <h3>REMINDERS</h3>\n                  <button className=\"button-submit-blue\">MAKE REMINDER</button>\n                  <div className=\"input-container\">\n                    <OutputReminders/>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <div>\n     <div className=\"AuthNav\">\n      <div className=\"container\">\n        <div className=\"row\">\n         <div className=\"col-md-6\">\n          <h5>VINCO</h5>\n         </div>\n         <div className=\"col-md-6\">\n           <div className=\"row\">\n           <div className=\"col-md-3\">\n              <div className=\"nav-padding\">\n              <NavLink to=\"/dash\" className=\"navlink-auth\"><h6>HOME</h6></NavLink>\n              </div>\n           </div>\n           <div className=\"col-md-3\">\n            <div className=\"nav-padding\">\n              <h6 className=\"navlink-auth\" onClick={() => {\n                setReminder({\n                  modal: true\n                })\n              }}>CALENDAR</h6>\n            </div>\n           </div>\n           <div className=\"col-md-3\">\n             <div className=\"nav-padding\">\n              <NavLink to=\"/search\" className=\"navlink-auth\"><h6>SEARCH</h6></NavLink>\n             </div>\n            </div>\n            <div className=\"col-md-3\">\n               <Useraccount/>\n            </div>\n           </div>\n         </div>\n        </div>\n      </div>\n     </div>\n     <ModalReminder remindermodal={remindermodal.modal}/>\n     <ModalReminderDetails modalreminderdetails={detailsmodal.detailsmodal} item={detailsreminder.details} />\n    </div>\n  )\n}\n\nexport default Authnav;","export const generateId = (length) => {\n    let result = '';\n    const characters  = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.~_';\n    const charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\nexport const MinimizeBigTitle = (text) => {\n    let stringvalue = null\n    if (text.length > 10) {\n        stringvalue = text.substring(0, 11) + '...'\n    } else {\n        stringvalue = text\n    } \n\n    return stringvalue\n}\n","import React from 'react';\nimport '../App.css'\n\nconst LoadingWhite = ({loading}) => {\n    if(loading === true) {\n        return (\n            <div>\n                <div className=\"loading-comp\">\n                <div className=\"d-flex justify-content-center\">\n                    <div className=\"loadingwhite\"></div>\n                    <h1 className=\"text-center\">LOADING CONTENT</h1>\n                </div>\n                </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default LoadingWhite;","import React from 'react'\n\nconst LoadingModalPage = ({loading , content}) => {\n    if (loading === true) {\n        return (\n            <div>\n                <div className=\"modal-edu\">\n                 <div className=\"container\">\n                  <div className=\"modal-padding\">\n                    <div className=\"modal-container\">\n                      <div className=\"modal-loading-page\">\n                        <div className=\"d-flex justify-content-center\">\n                            <div className=\"loadingblue\"></div>\n                        </div>\n                        <div className=\"loading-title-padding\">\n                        <h1 className=\"text-center\">{content}</h1>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                 </div>\n                </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default LoadingModalPage;","import React, {useState, useEffect, useRef} from 'react';\nimport Authnav from './Authcomps/Authnav';\nimport {NavLink} from 'react-router-dom';\nimport firebase from '../ServerSide/basefile';\nimport {generateId, MinimizeBigTitle} from '../ServerSide/functions';\nimport LoadingWhite from '../Comps/Loadingwhite';\nimport LoadingModalPage from '../Comps/WholeLoadingWhite';\nimport axios from 'axios';\n\nconst Dash = () => {\n    const [connectionsres, setConnectionRes] = useState({\n        connectionsres: []\n    })\n    const [subres, setSubRes] = useState({\n        subres: []\n    })\n    const [response, setResponse] = useState({\n        response: []\n    })\n    const [modalopened, setModalOpened] = useState({\n        modalopened: false\n    })\n    const [loading, setLoading] = useState({\n        loading: true\n    })\n    const [groupoutput, setGroupOutput] = useState({\n        groupoutput: true\n    })\n    const [subgroupoutput, setSubGroupOutput] = useState({\n        subgroupoutput: false\n    })\n    const [connectiongroups, setConnectionGroups] = useState({\n        connectiongroups: false\n    })\n    const [finalgroupname, setFinalGroupName] = useState({\n        finalgroupname: ''\n    })\n    const [creatinggroup, setCreatingGroup] = useState({\n        creatinggroup: false\n    })\n\n    const componentMounted = useRef(null)\n\n    useEffect(() => {\n        componentMounted.current = true\n            setTimeout(() => {\n                if (componentMounted.current) {\n                axios.get('https://vincobackend.herokuapp.com/api/group/getgroups/' + firebase.auth().currentUser.uid)\n                .then((body) => {\n                    setResponse({\n                        response: body.data\n                    })\n                    setLoading({\n                        loading: false\n                    })\n                }).catch((error) => {\n                    console.log(error)\n                })\n                }\n               }, 500);\n    \n               axios.get('https://vincobackend.herokuapp.com/user/getusersubs/' + firebase.auth().currentUser.uid)\n               .then((body) => {\n                   setSubRes({\n                       subres: body.data\n                   })\n               }).catch((error) => {\n                   console.log(error);\n               }) \n\n             axios.get('https://vincobackend.herokuapp.com/user/getuserconnections/' + firebase.auth().currentUser.uid)\n             .then((body) => {\n                 setConnectionRes({\n                     connectionsres: body.data\n                 })\n             }).catch((error) => {\n                 console.log(error)\n             })\n           \n\n           return () => {componentMounted.current = false}\n    }, [])\n\n  const ConnectionGroups = ({connectiongroups}) => {\n      if (connectiongroups === true) {\n        return (\n            <div>\n                <div className=\"row\">\n                {\n                    connectionsres.connectionsres.map((item) => (\n                      <div key={connectionsres.connectionsres.indexOf(item)}>\n                       <div className=\"group-spacing\">\n                         <NavLink className=\"groupnav\" to={\"/connection/\" + item.connectiongroupapi}>\n                         <div className=\"connection-group\">\n                            <h3 className=\"text-center\">{item.connectionname}</h3>\n                         </div>\n                         </NavLink>\n                       </div>     \n                      </div>  \n                    ))\n                }\n                </div>\n            </div>\n        )\n      } else {\n          return null;\n      }\n  }\n\n\n  const ModalCreate = ({modalopened}) => {\n        const [allusers, setAllusers] = useState({\n            allusers: []\n        })\n        const [groupname, setGroupName] = useState({\n            groupname: ''\n        })\n        const[groupdescription, setGroupDescription] = useState({\n            groupdescription: ''\n        })\n        const[usersadded] = useState({\n            usersadded: []\n        })\n        const [suggestions, setSuggestions] = useState({\n            suggestions: []\n        })\n        const [grouptype, setGroupType] = useState({\n            grouptype: 'BASICGROUPS'\n        }) \n        const subComponentMounted = useRef(null);\n\n\n        useEffect(() => {\n          subComponentMounted.current = true;\n          if (modalopened === true) {\n               setTimeout(() => {\n                if (subComponentMounted.current) {\n                axios.get('https://vincobackend.herokuapp.com/user/getallusers')\n                .then((body) => {\n                  const newbody = body.data.filter(index => index.useruid !== firebase.auth().currentUser.uid)\n                  setAllusers({\n                      allusers: newbody\n                  })\n                 }).catch((error) => {\n                  console.log(error)\n                })\n                }\n               }, 500);\n          }\n          return () => {subComponentMounted.current = false}\n        }, [modalopened])\n        \n\n            const RenderSuggestions = () => {\n                if (suggestions.suggestions.length === 0) {\n                    return null\n                }\n          \n                return (\n                    <div>\n                      {suggestions.suggestions.map(item => (\n                          <div key={generateId(10)}>\n                            <div className=\"suggest-card\">\n                              <div className=\"row\">\n                                <div className=\"col-md-10\">\n                                  <h6>{item.email}</h6>\n                                  <h4>{item.firstname + ' ' + item.lastname}</h4>\n                                </div>\n                                <div className=\"col-md-2\">\n                                 <div className=\"button-padding\">\n                                  <button className=\"button-submit\" onClick={() => {\n                                      usersadded.usersadded.push(item.useruid)\n                                  }}>ADD USER</button>\n                                 </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                      ))}\n                    </div>\n                )\n            }\n\n            const ShowGroupTitleOnCreate = () => {\n                if (groupname.groupname.length > 0) {\n                    return (\n                        <div>\n                         <h4>{\"What kind of group is \" + groupname.groupname + \"?\"}</h4>\n                        </div>\n                    )\n                } else {\n                    return (\n                        <div>\n                         <h4>What kind of group is this ?</h4>\n                        </div>\n                    )\n                }\n            }\n\n            if (modalopened === true) {\n                return (\n                    <div>\n                      <div className=\"modal-edu\">\n                        <div className=\"container\">\n                         <div className=\"modal-padding\">\n                          <div className=\"modal-container\">\n                            <span className=\"closebtndark\" onClick={() => {\n                                    setModalOpened({\n                                        modalopened: false\n                                    })\n                                }} >&times;</span>\n                                <h3 className=\"text-center\">CREATE GROUP</h3>\n                                <div className=\"input-container\">\n                                    <div className=\"group\">      \n                                        <input type=\"text\" className=\"inputbar\" name=\"groupname\" onChange={(e) => {\n                                            setGroupName({\n                                            groupname: e.target.value\n                                            })\n                                        }} required />\n                                        <span className=\"highlight\"></span>\n                                        <span className=\"bar\"></span>\n                                        <label className=\"labelbar\">Name of Group</label>\n                                    </div>\n                                </div>\n                                <div className=\"input-container\">\n                                    <div className=\"group\">      \n                                        <textarea type=\"text\" className=\"inputbar\" name=\"groupdescription\" onChange={(e) => {\n                                            setGroupDescription({\n                                            groupdescription: e.target.value\n                                            })\n                                        }} required />\n                                        <span className=\"highlight\"></span>\n                                        <span className=\"bar\"></span>\n                                        <label className=\"labelbar\">Group Description</label>\n                                    </div>\n                                </div>\n                                <div className=\"input-container\">\n                                <ShowGroupTitleOnCreate/>\n                                <div className=\"small-input-container\">\n                                    <div className=\"select-group\">\n                                    <select className=\"select-bar\" name=\"typeofgroup\" onChange={(e) => {\n                                        if(e.target.value === \"Basic Group\") {\n                                        setGroupType({\n                                                grouptype : \"BASICGROUPS\"\n                                            })\n                                        } else if (e.target.value === \"Organizational Group\") {\n                                            setGroupType({\n                                                grouptype : \"ORGANIZATIONALGROUPS\"\n                                            })\n                                        }\n                                    }}>\n                                    <option value=\"Basic Group\">Basic Group</option>\n                                    <option value=\"Organizational Group\">Organizational Group</option>\n                                    </select>\n                                    </div>\n                                </div>\n                                </div>\n                                <div className=\"input-container\">\n                                    <div className=\"group\">      \n                                        <input type=\"text\" className=\"inputbar\" name=\"searchvalue\" onChange={(e) => {\n                                            let suggestionsmade = [];\n                                            if (e.target.value.length > 0) {\n                                                const regex = new RegExp(`^${e.target.value}` , 'i');\n                                                suggestionsmade = allusers.allusers.sort().filter(v => regex.test(v.firstname))\n                                                setSuggestions({\n                                                    suggestions: suggestionsmade\n                                                })\n                                            }\n                                        }} required />\n                                        <span className=\"highlight\"></span>\n                                        <span className=\"bar\"></span>\n                                        <label className=\"labelbar\">People you want to add</label>\n                                    </div>\n                                </div>\n                                <RenderSuggestions/>\n                                <div className=\"input-container\">\n                                    <button className=\"button-submit\" onClick={(e) => {    \n                                        const users = [];\n                                        users.push(firebase.auth().currentUser.uid);\n                                        const adminusers = [];\n                                        adminusers.push(firebase.auth().currentUser.uid);\n                                        let data;\n                                        if (grouptype.grouptype === \"BASICGROUPS\") {\n                                            data = {\n                                                groupname: groupname.groupname,\n                                                groupdescription: groupdescription.groupdescription,\n                                                usersadded: usersadded.usersadded,\n                                                creator: firebase.auth().currentUser.uid,\n                                                grouptype: grouptype.grouptype,\n                                                adminusers: adminusers,\n                                                users: users,\n                                                clientid: groupname.groupname.replace(\" \" , \"\") \n                                            }\n                                        } else if (grouptype.grouptype === \"ORGANIZATIONALGROUPS\") {\n                                            data = {\n                                                groupname: groupname.groupname,\n                                                groupdescription: groupdescription.groupdescription,\n                                                usersadded: usersadded.usersadded,\n                                                creator: firebase.auth().currentUser.uid,\n                                                grouptype: grouptype.grouptype,\n                                                adminusers: adminusers,\n                                                users: users,\n                                                clientid: groupname.groupname.replace(\" \" , \"\")                               \n                                            }\n                                        }\n\n                                       \n                                        axios.post('https://vincobackend.herokuapp.com/api/group/creategroup' , data, {\n                                            headers: {\n                                                'Accept': 'application/json',\n                                                'Content-Type': 'application/json'\n                                            },\n                                        }).then((body) => {\n                                            response.response.push(body.data);\n                                            setTimeout(() => {\n                                                setResponse({\n                                                    response: response.response\n                                                })\n                                            }, 500);\n                                            setFinalGroupName({\n                                                finalgroupname: groupname.groupname\n                                            })\n                                            \n                                            setModalOpened({\n                                                modalopened: false\n                                            })\n\n                                            setCreatingGroup({\n                                                creatinggroup: true\n                                            })\n\n                                            setTimeout(() => {\n                                                setCreatingGroup({\n                                                    creatinggroup: false\n                                                })\n                                            }, 4000);\n                                        }).catch((error) => {\n                                            console.log(error);\n                                        }) \n                                                             \n                                    }}>\n                                        SUBMIT\n                            </button>\n                            </div>\n                          </div>\n                         </div>\n                        </div>\n                      </div>\n                    </div>\n                )\n            } else {\n                return null;\n            }\n        \n\n    }\n\n\n    const Groupoutput = ({groupoutput}) => {\n         if (groupoutput === true) {\n            return (\n                <div>\n                <div className=\"g-container\">\n                <div className=\"row\">\n                  {\n                      response.response.map(item => (\n                          <div key={item.clientid}>\n                           <div className=\"group-spacing\">\n                           <NavLink className=\"groupnav slightshadow\" to={\"/group/\" + item.groupapi}>\n                            <div className={\"groupcard-\" + item.grouptype}>\n                                <h3 className=\"text-center\">{MinimizeBigTitle(item.groupname)}</h3>\n                            </div>\n                           </NavLink>\n                           </div>\n                          </div>\n                      ))\n                  }\n                </div>\n                </div>\n              </div>\n             )\n         } else {\n             return null\n         }\n     }\n\n    const SubGroupOutput = ({subgroupoutput}) => {\n        if (subgroupoutput === true) {\n            return (\n                <div>\n                <div className=\"g-container\">\n                <div className=\"row\">\n                  {\n                      subres.subres.map(item => (\n                          <div key={subres.subres.indexOf(item)}>\n                           <div className=\"group-spacing\">\n                           <NavLink className=\"groupnav slightshadow\" to={\"/subgroup/\" + item.grouptype + '/' + item.maingroupapi + \"/\" + item.subgroupapi}>\n                            <div className=\"subgroupcard\">\n                                <h3 className=\"text-center\">{item.subgroupname}</h3>\n                            </div>\n                           </NavLink>\n                           </div>\n                          </div>\n                      ))\n                  }\n                </div>\n                </div>\n              </div>\n             )\n        } else {\n            return null;\n        }\n     }\n\n        return (\n            <div>\n             <Authnav/>\n             <div className=\"page\">\n               <div className=\"vinco-dash\">\n                <div className=\"container\">\n                <div className=\"row\">\n                 <div className=\"col-md-10\">\n                  <h1>HUB</h1>\n                 </div>\n                 <div className=\"col-md-2\">\n                 <div>\n                    <button className=\"button-submit\" onClick={() => {\n                        setModalOpened({\n                            modalopened: true\n                        })\n                    }}>CREATE GROUP</button>\n                 </div>\n                 </div>\n                 <div>\n                   <div className=\"float-left\">\n                   <div className=\"row\">\n                    <div className=\"col-md-4\">\n                     <div className=\"button-padding\">\n                     <NavLink className=\"navlink\" to=\"/pending\">\n                      <button className=\"button-submit-white\">PENDING GROUPS</button> \n                     </NavLink>\n                     </div>\n                    </div>\n                    <div className=\"col-md-2\">\n                    <div className=\"button-padding\">\n                    <button className=\"button-submit\" onClick={() => {\n                        setGroupOutput({\n                            groupoutput: true\n                        })\n                        setSubGroupOutput({\n                            subgroupoutput: false\n                        })\n                        setConnectionGroups({\n                            connectiongroups: false\n                         })\n                    }}>GROUPS</button>\n                    </div>\n                    </div>\n                    <div className=\"col-md-3\">\n                    <div className=\"button-padding\">\n                    <button className=\"button-submit-blue\" onClick={() => {\n                       setSubGroupOutput({\n                           subgroupoutput: true\n                       })\n                       setGroupOutput({\n                           groupoutput: false\n                       })\n                       setConnectionGroups({\n                        connectiongroups: false\n                     })\n                    }}>SUBGROUPS</button>\n                    </div>\n                    </div>\n                    <div className=\"col-md-3\">\n                    <div className=\"button-padding\">\n                    <button className=\"button-submit-lightblue\" onClick={() => {\n                       setSubGroupOutput({\n                           subgroupoutput: false\n                       })\n                       setGroupOutput({\n                           groupoutput: false\n                       })\n                       setConnectionGroups({\n                          connectiongroups: true\n                       })\n                    }}>CONNECTIONS</button>\n                    </div>\n                    </div>\n                   </div>\n                   </div>\n                 </div>\n                </div>\n                <LoadingWhite loading={loading.loading} />\n                <Groupoutput groupoutput={groupoutput.groupoutput}/>\n                <SubGroupOutput subgroupoutput={subgroupoutput.subgroupoutput}/>\n                <ConnectionGroups connectiongroups={connectiongroups.connectiongroups}/>\n                </div>\n               </div>\n             </div>\n             <ModalCreate modalopened={modalopened.modalopened}/>\n             <LoadingModalPage loading={creatinggroup.creatinggroup} content={`Creating ${MinimizeBigTitle(finalgroupname.finalgroupname)} group`}/>\n            </div>\n        )\n}\n\nexport default Dash;","import React, {useState, useEffect, useRef} from 'react';\nimport Authnav from './Authcomps/Authnav';\nimport firebase from '../ServerSide/basefile';\nimport axios from 'axios';\nconst Search = () => {\n   const [clientid, setClientId] = useState({\n       clientid: ''\n   })\n   const [response, setResponse] = useState({\n       response: []\n   })\n   const [clientgroupmodal, setClientGroupModal] = useState({\n       clientgroupmodal: false\n   })\n   const [userresponse, setUserResponse] = useState({\n     userresponse: []\n   })\n   \n   const componentMounted = useRef(null)\n\n   useEffect(() => {\n    componentMounted.current = true\n    if (componentMounted.current) {\n    axios.get('https://vincobackend.herokuapp.com/api/group/getclients/' + firebase.auth().currentUser.uid)\n    .then((bod) => {\n        setUserResponse({\n            userresponse: bod.data\n        })\n    }).catch((error) => {\n        console.log(error);\n    })\n    }\n\n    return () => {componentMounted.current = false}\n   })\n\n   const StatusBtn = ({status}) => {\n        if (userresponse.userresponse.includes(status) !== true) {\n            return (\n                <div>\n                  <button onClick={() => {\n                      axios.put('https://vincobackend.herokuapp.com/api/group/putrequest/' + response.response.groupid + '/' + firebase.auth().currentUser.uid, {\n                          headers:{\n                            'Accept': 'application/json',\n                            'Content-Type': 'application/json'\n                          }\n                      }).then(() => {\n                          setClientGroupModal({\n                              clientgroupmodal: false\n                          })\n                      }).catch((error) => {\n                          console.log(error);\n                      })\n                  }} className=\"button-submit\">JOIN GROUP</button>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                  <div className=\"red-label\">\n                    <h6 className=\"text-center\">YOURE ALREADY IN THIS GROUP</h6>\n                  </div>\n                </div>\n            )\n        }\n    }\n   \n   const ClientGroupModal = ({clientgroupmodal}) => {\n        if (clientgroupmodal === true) {\n            return (\n                <div>\n                 <div className=\"modal-edu\">\n                  <div className=\"container\">\n                    <div className=\"modal-padding\">\n                     <div className=\"modal-container\">\n                      <span className=\"closebtndark\" onClick={() => {\n                          setClientGroupModal({\n                              clientgroupmodal: false\n                          })\n                      }}>&times;</span>\n                      <h2>{response.response.groupname}</h2>\n                      <div className=\"client-padding\">\n                       <h5>{response.response.groupdescription}</h5>\n                      </div>\n                      <div className=\"button-padding\">\n                        <StatusBtn status={clientid.clientid}/>\n                      </div>\n                     </div>\n                    </div>\n                  </div>\n                 </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n        return (\n            <div>\n                <Authnav/>\n                <div className=\"page\">\n                 <div className=\"search-page\">\n                  <div className=\"container\">\n                  <h1 className=\"text-center\">SEARCH</h1>\n                  <div className=\"input-container\">\n                    <div className=\"group\">      \n                     <input type=\"text\" className=\"inputbar\" name=\"clientid\" onChange={(e) => {\n                      setClientId({\n                         clientid: e.target.value\n                      })\n                    }} required />\n                     <span className=\"highlight\"></span>\n                     <span className=\"bar\"></span>\n                    <label className=\"labelbar\">GROUP CODE</label>\n                  </div>\n                 </div>\n                 <div className=\"longbutton text-center\" onClick={() => {\n                     axios.get('https://vincobackend.herokuapp.com/api/group/getclientgroup/' + clientid.clientid)\n                     .then((body) => {\n                         setResponse({\n                            response: body.data\n                         })\n                         setClientGroupModal({\n                             clientgroupmodal: true\n                         })\n                     }).catch((error) => {\n                         console.log(error);\n                     })\n                 }}>ENTER</div>\n                  </div>\n                 </div>\n                </div>\n                <ClientGroupModal clientgroupmodal={clientgroupmodal.clientgroupmodal}/>\n            </div>\n        )\n    \n}\n\nexport default Search;","import React, {useState} from 'react';\nimport Nav from './Comps/Nav';\nimport firebase from '../ServerSide/basefile';\nimport {Redirect} from 'react-router-dom';\nimport validator from 'email-validator';\nimport axios from 'axios'\nconst Register = () => {\n    const [firstname, setFirstName] = useState({\n        firstname: ''\n    })\n    const [lastname, setLastName] = useState({\n        lastname: ''\n    })\n    const [email, setEmail] = useState({\n        email: ''\n    })\n    const [password, setPassword] = useState({\n        password: ''\n    })\n    const [loggedin, setLoggedIn] = useState({\n        loggedin: false\n    })\n\n    const ShowValidEmailResponse = () => {\n        if (validator.validate(email.email) === true && email.email.length > 0) { \n            return (\n                <div>\n                 <div className=\"title-padding\">\n                  <h6 className=\"color-green\">VALID EMAIL</h6>\n                 </div>\n                </div>\n            )\n        } else if (validator.validate(email.email) === false && email.email.length > 0) { \n            return (\n                <div>\n                  <div className=\"title-padding\">\n                  <h6 className=\"color-red\">NOT VALID EMAIL</h6>\n                  </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n    const RegisterUser = () => {\n        const data = {\n            firstname: firstname.firstname,\n            lastname: lastname.lastname,\n            email: email.email,\n            password: password.password\n        }\n        axios.post('https://vincobackend.herokuapp.com/user/createuser', JSON.stringify(data), {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n        .then((body) => {\n            if(body.data === true) {\n                firebase.auth().signInWithEmailAndPassword(email.email , password.password)\n                .then(() => {\n                    setLoggedIn({\n                        loggedin: true\n                    })\n                }).catch((error) => {\n                    console.log(error);\n                })\n            }\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n        console.log(loggedin.loggedin)\n        if (loggedin.loggedin) {\n            return <Redirect to=\"/dash\" />\n        }\n        return (\n            <div>\n            <Nav/>\n             <div className=\"page\">\n              <div className=\"register-page\">\n               <div className=\"container\">\n                <h1>REGISTER</h1>\n                <div className=\"row\">\n                 <div className=\"col-md-6\">\n                 <div className=\"input-container\">\n                     <div className=\"group\">   \n                        <input type=\"text\" className=\"inputbar\" name=\"firstname\" onChange={(e) => {\n                            setFirstName({\n                              firstname: e.target.value\n                            })\n                        }} required />\n                        <span className=\"highlight\"></span>\n                        <span className=\"bar\"></span>\n                        <label className=\"labelbar\">First Name</label>\n                      </div>\n                  </div>\n                 </div>\n                 <div className=\"col-md-6\">\n                 <div className=\"input-container\">\n                     <div className=\"group\">      \n                        <input type=\"text\" className=\"inputbar\" name=\"lastname\" onChange={(e) => {\n                            setLastName({\n                              lastname: e.target.value\n                            })\n                        }} required />\n                        <span className=\"highlight\"></span>\n                        <span className=\"bar\"></span>\n                        <label className=\"labelbar\">Last Name</label>\n                      </div>\n                  </div>\n                 </div>\n                </div>\n                <div className=\"input-container\">\n                   <ShowValidEmailResponse/>\n                     <div className=\"group\">      \n                        <input type=\"text\" className=\"inputbar\" name=\"email\" onChange={(e) => {\n                            setEmail({\n                              email: e.target.value\n                            })\n                        }} required />\n                        <span className=\"highlight\"></span>\n                        <span className=\"bar\"></span>\n                        <label className=\"labelbar\">Email</label>\n                      </div>\n                  </div>\n                  <div className=\"input-container\">\n                     <div className=\"group\">      \n                        <input type=\"password\" className=\"inputbar\" name=\"password\" onChange={(e) => {\n                            setPassword({\n                              password: e.target.value\n                            })\n                        }} required />\n                        <span className=\"highlight\"></span>\n                        <span className=\"bar\"></span>\n                        <label className=\"labelbar\">Password</label>\n                      </div>\n                  </div>\n                  <div className=\"input-container\">\n                    <div className=\"longbutton text-center\" onClick={RegisterUser}>REGISTER</div>\n                  </div>\n               </div>\n              </div>\n             </div>\n            </div>\n        )\n}\n\nexport default Register","import React from 'react';\nimport '../App.css'\n\nconst LoadingBlue = ({loading , statement}) => {\n    if(loading === true) {\n        return (\n            <div>\n                <div className=\"loading-comp\">\n                <div className=\"d-flex justify-content-center\">\n                    <div className=\"loadingblue\"></div>\n                    <div className=\"loading-title-padding\">\n                     <h4 className=\"text-center\">{statement}</h4>\n                    </div>\n                </div>\n                </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default LoadingBlue;","import React from 'react';\n\nconst FileViewer = ({url , type , name, callback}) => {  \n   if (type === \"application/pdf\" || type === \"\") {\n    const file = url + \"#pagemode=none&scrollbar=0&toolbar=0&statusbar=1&messages=0&navpanes=0&width=100%\";\n     return <iframe src={file} name={name} title={name} className=\"pdffile\" onClick={callback} />\n   } else if (type === \"application/json\" || type === \"text/javascript\" ) {\n       return <embed src={url} title={name} className=\"embedfile\" onClick={callback}></embed>    \n   } else if (type.includes(\"image/\") === true) {\n       return <img src={url} className=\"postimg\" alt={name} onClick={callback}/>\n   } else {\n       return <h3 className=\"text-center\">WE ARE WORKING ON IT</h3>\n   }\n\n}\n\nexport default FileViewer;","import React, {useState , useEffect, useCallback, useRef} from 'react';\nimport {generateId} from '../../../../ServerSide/functions';\nimport firebase from '../../../../ServerSide/basefile';\nimport LoadingBlue from '../../../../Comps/Loadingblue';\nimport FileViewer from './Fileview';\nimport axios from 'axios';\nconst FileNotes = ({filenotes, url , type ,grouptype , groupid, boxfilerid , currentfolderid, currentfileid , currentfilename}) => {\n    const [notesres, setNotesRes] = useState({\n        notesres: []\n    })\n    const [notesform, setNotesForm] = useState({\n        notesform: false\n    })\n    const [currentnote, setCurrentNote] = useState({\n        currentnote: {}\n    })\n    const [datapositionleft, setDataPositionLeft] = useState({\n        datapositionleft: ''\n    })\n    const [datapositionright, setDataPositionRight] = useState({\n        datapositionright: ''\n    })\n    const [stylepointleft, setStylePointLeft] = useState({\n        stylepointleft: ''\n    })\n    const [stylepointright, setStylePointRight] = useState({\n        stylepointright: ''\n    })\n    const [notemodal, setNoteModal] = useState({\n        notemodal: false\n    })\n\n    const componentMounted = useRef(null);\n\n    const fetchFileNotes = useCallback(() => {\n       setTimeout(() => {\n        if (componentMounted.current) {\n            axios.get('https://vincobackend.herokuapp.com/api/boxfiler/getnotes/' + grouptype + '/' + groupid + '/' + boxfilerid + '/' + currentfolderid + '/' + currentfileid)\n             .then((body) => {\n                 console.log(body);\n                 setNotesRes({\n                     notesres: body.data\n                 })\n             }).catch((error) => {\n                 console.log(error)\n             })\n        }\n       }, 400);\n    }, [grouptype, groupid, boxfilerid, currentfolderid, currentfileid])\n\n    useEffect(() => {\n     componentMounted.current = true\n     if (filenotes === true) {\n        if (currentfileid !== \"\" && currentfolderid !== \"\") {\n            fetchFileNotes();\n        }\n     }\n     return () => {componentMounted.current = false}\n    }, [fetchFileNotes, currentfileid, currentfolderid, filenotes])\n\n    if (filenotes === true) {\n    \n    const NotesTags = () => {\n        return(\n            <div>\n          {\n              notesres.notesres.map((item) => (\n                  <div key={notesres.notesres.indexOf(item)}>\n                     <div className={\"notetag note-background-\" + item.style} style={{left: item.styleleft , top: item.styleright }}></div>\n                  </div>\n              ))\n          }  \n        </div>\n        )\n    }\n\n    const NoteModal = ({notemodal, item}) => {\n      if (notemodal === true) {\n        return (\n            <div>\n              <div className=\"modal-edu\">\n                <div className=\"container\">\n                 <div className=\"modal-padding\">\n                  <div className=\"modal-container\">\n                  <span className=\"closebtndark\"  onClick={() => {\n                      setNoteModal({\n                          notemodal: false\n                      })\n                  }}>&times;</span>\n                  <h3>NOTE</h3>\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <h4>{item.notepost}</h4>\n                    </div>\n                    <div className=\"col-md-6\">\n                     <div className=\"image-positioning\">\n                      <div className={\"notetag note-background-\" + item.style} style={{left: item.styleleft , top: item.styleright }}></div>\n                      <FileViewer url={url} type={type} name={currentfilename}/>\n                     </div>\n                    </div>\n                  </div>\n                  </div>\n                 </div>\n                </div>\n              </div>\n            </div>\n        )\n      } else {\n          return null\n      }\n    }\n\n    const CurrentNotesShown = () => {\n     return (\n         <div>\n             {\n                 notesres.notesres.map((item) => (\n                     <div key={notesres.notesres.indexOf(item)}>\n                        <div className={\"card-note note-background-\" + item.style} onClick={() => {\n                            setCurrentNote({\n                                currentnote: item\n                            })\n                            setNoteModal({\n                                notemodal: true\n                            })\n                        }}>\n                        <div className=\"float-right\">\n                        <h6>{item.displaydate}</h6>\n                        </div>\n                        <h6>{item.creator}</h6>\n                        <div className=\"title-padding\">\n                        <h5>{item.notepost}</h5>\n                        </div>\n                        </div>\n                     </div>\n                 ))\n             }\n         </div>\n     )\n    }\n\n    const NotesForm = ({notesform}) => {\n        const [notesinput , setNotesInput] = useState({\n            notesinput: ''\n        })\n        if (notesform === true) {\n            return (\n                <div>\n                  <div className=\"modal-edu\">\n                    <div className=\"container\">\n                     <div className=\"modal-padding\">\n                      <div className=\"row\">\n                        <div className=\"col-md-6\">\n                         <div className=\"modal-container\">\n                         <span className=\"closebtndark\" onClick={() => {\n                             setNotesForm({\n                                 notesform: false\n                             })\n                         }}>&times;</span>\n                         <h3>MAKE NOTES</h3>\n                         <div className=\"input-container\">\n                         <div className=\"group\">      \n                                <textarea type=\"text\" className=\"inputbar\" name=\"noteinput\" onChange={(e) => {\n                                    setNotesInput({\n                                        notesinput: e.target.value\n                                    })\n                                }} required />\n                                <span className=\"highlight\"></span>\n                                <span className=\"bar\"></span>\n                                <label className=\"labelbar\">Write Note Here.</label>\n                         </div>\n                         </div>\n                         <div className=\"input-container\">\n                            <button className=\"button-submit-blue\" onClick={() => {\n                                const timestamp = new Date();\n                                const data = {\n                                    backendpointleft: datapositionleft.datapositionleft,\n                                    backendpointright: datapositionright.datapositionright,\n                                    styleleft: stylepointleft.stylepointleft,\n                                    styleright: stylepointright.stylepointright,\n                                    grouptype: grouptype,\n                                    groupid: groupid,\n                                    boxfilerid: boxfilerid,\n                                    folderid: currentfolderid,\n                                    fileid: currentfileid,\n                                    noteidentification: generateId(69),\n                                    notepost: notesinput.notesinput,\n                                    notedate: timestamp,\n                                    creator: firebase.auth().currentUser.displayName,\n                                    displaydate: timestamp.getMonth().toString() + '/' + timestamp.getDate() + '/' + timestamp.getFullYear(),\n                                    style: notesres.notesres.length + 1 \n                                }\n\n                                console.log(data);\n                                \n                                axios.post('https://vincobackend.herokuapp.com/api/boxfiler/postnotes/' + grouptype + '/' + groupid + '/' + boxfilerid + '/' + currentfolderid + '/' + currentfileid, data,{\n                                    headers: {\n                                        'Accept': 'application/json',\n                                        'Content-Type': 'application/json'\n                                    },\n                                }).then((body) => {\n                                    notesres.notesres.push(body.data);\n                                    setNotesRes({\n                                        notesres: notesres.notesres\n                                    })\n                                    setNotesForm({\n                                        notesform: false\n                                    })\n                                }).catch((error) => {\n                                    console.log(error);\n                                })\n                            }}>CREATE NOTE</button>\n                         </div>\n                         </div>\n                        </div>\n                        <div className=\"col-md-6\">\n                         <div className=\"modal-container-blue\">\n                          <h6>{firebase.auth().currentUser.displayName}</h6>\n                          <div className=\"input-container\">\n                            <h3>{notesinput.notesinput}</h3>\n                          </div>\n                         </div>\n                        </div>\n                      </div>\n                     </div>\n                    </div>\n                  </div>  \n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n      return (\n          <div>\n             <div className=\"row\">\n              <div className=\"col-md-4\">\n                <CurrentNotesShown />\n              </div>\n              <div className=\"col-md-8\">\n               <div className=\"image-positioning\" onClick={(event) => {\n                    let pos_x = event.nativeEvent.offsetX;\n                    let pos_y = event.nativeEvent.offsetY;\n                    let left_position = (pos_x-13).toString() + 'px';\n                    let top_position = (pos_y-13).toString() + 'px';\n                    console.log(pos_x);\n                    console.log(pos_y);\n                    setNotesForm({\n                        notesform: true\n                    })\n                    setDataPositionLeft({\n                        datapositionleft: pos_x\n                    })\n                    setDataPositionRight({\n                        datapositionright: pos_y\n                    })\n                    setStylePointLeft({\n                        stylepointleft: left_position\n                    })\n                    setStylePointRight({\n                        stylepointright: top_position\n                    })\n                }}>\n                <NotesTags/>\n                <FileViewer url={url} type={type} name={currentfilename}/>\n               </div>\n              </div>\n             </div>\n             <NotesForm notesform={notesform.notesform}/>\n             <NoteModal notemodal={notemodal.notemodal} item={currentnote.currentnote}/>\n          </div>\n      )\n    } else {\n        return null;\n    }\n}\nconst FileComments = ({ filecomment, url , type ,grouptype , groupid, boxfilerid , currentfolderid, currentfileid , currentfilename}) => {\n    const [outputfilecomment, setOutputFileComment] = useState({\n        outputfilecomment: ''\n    })\n    const [outputfileres, setOutputFileRes] = useState({\n        outputfileres: []\n    })\n    const [loadingfile, setLoadingFile] = useState({\n        loading: true\n    })\n\n    const fetchFileComments = useCallback(() => {\n        setTimeout(() => {\n          if (componentMounted.current) {\n            axios.get('https://vincobackend.herokuapp.com/api/boxfiler/getfilecomments/' + grouptype + '/' + groupid + '/' + boxfilerid + '/' + currentfolderid + '/' + currentfileid)\n            .then((bod) => {\n                console.log(bod);\n                setOutputFileRes({\n                   outputfileres: bod.data\n                })\n                setLoadingFile({\n                    loading: false\n                })\n            }).catch((error) => {\n                console.log(error);\n            })\n          }    \n        } , 400);\n    } , [grouptype, groupid, boxfilerid, currentfileid, currentfolderid]);\n\n\n    const componentMounted = useRef(null);\n    \n    useEffect(() => {\n      setLoadingFile({\n          loading: true\n      })\n        componentMounted.current = true;\n                if (filecomment === true) {\n                    if (currentfileid !== \"\" && currentfolderid !== \"\") {\n                     fetchFileComments()\n                    }\n                 } \n\n            return () => {componentMounted.current = false}\n            \n    }, [fetchFileComments, filecomment , currentfileid, currentfolderid])\n\n    \n    if (filecomment === true) {\n        const CommentOutput = () => {\n            const outputdata = {\n                comment: outputfilecomment.outputfilecomment,\n                date: new Date(),\n                creator: firebase.auth().currentUser.uid,\n                displayname: firebase.auth().currentUser.displayName,\n                commentid: generateId(54)\n            }\n    \n            axios.put('https://vincobackend.herokuapp.com/api/boxfiler/commentonfile/'  + grouptype + '/' + groupid + '/' + boxfilerid + '/' + currentfolderid + '/' + currentfileid , outputdata,{\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n            }).then(() => {\n             return fetchFileComments();\n            }).catch((error) => {\n                console.log(error);\n            })\n        }\n    \n       const OutputComment = () => {\n            return (\n                <div>\n                    {\n                        outputfileres.outputfileres.map(item => (\n                            <div key={outputfileres.outputfileres.indexOf(item)}>\n                                <div className=\"comment-container\">\n                                  <h6 className=\"comment d-inline-flex p-2\">{item.displayname + ': ' + item.comment}</h6>\n                                </div>\n                            </div>\n                        ))\n                    }\n                </div>\n            )\n        }\n    \n    \n            return(\n                <div>\n                    <div className=\"row\">\n                     <div className=\"col-md-4\">\n                     <input type=\"text\" className=\"input-comment-blue\" name=\"outputfilecomment\" onChange={(e) => {\n                        setOutputFileComment({\n                            outputfilecomment : e.target.value\n                        })\n                        }} onKeyDown={(e) => {\n                            if (e.keyCode === 13) {\n                            CommentOutput();\n                        }\n                        }} placeholder=\"Comment on this file...\"/>\n                        <div className=\"input-container\">\n                         <OutputComment/>\n                        </div>\n                     </div>\n                     <div className=\"col-md-8\">\n                      <FileViewer url={url} type={type} name={currentfilename}/>\n                     </div>\n                    </div>\n                    <LoadingBlue loading={loadingfile.loading}/>\n                </div>\n            )\n    } else {\n        return null;\n    }\n}\n\n\nconst BoxFiler = ({boxfiler , grouptype ,groupid, boxfilerid}) => {\n    const [foldermodal , setFolderModal] = useState({\n        foldermodal: false\n    })\n    const [addfilemodal, setAddFileModal] = useState({\n        addfilemodal: false\n    })\n    const [groupres, setGroupRes] = useState({\n        groupresp: []\n    })\n    const [currentfolderid, setCurrentFolderId] = useState({\n        currentfolderid: ''\n    })\n    const [currentfoldername, setCurrentFolderName] = useState({\n        currentfoldername: ''\n    })\n    const [currentfilename, setCurrentFileName] = useState({\n        currentfilename: ''\n    })\n    const [currentfileid, setCurrentFileId] = useState({\n        currentfileid: ''\n    })\n    const [currentfiletype, setCurrentFileType] = useState({\n        currentfiletype: ''\n    })\n    const [outputfile, setOutputFile] = useState({\n        outputfile: false\n    })\n    const [url, setUrl] = useState({\n        url: ''\n    })\n    const [loading, setLoading] = useState({\n        loading: true\n    })\n    const [commentfile, setCommentFile] = useState({\n        commentfile: true\n    })\n    const [notescomment, setNotesComment] = useState({\n        notescomment: false\n    })\n \n\n    const fetchFolders = useCallback(() => {\n        setTimeout(() => {\n        axios.get('https://vincobackend.herokuapp.com/api/boxfiler/getfolders/' + grouptype + '/' + groupid + '/' + boxfilerid)\n        .then((bod) => {\n            setGroupRes({\n                groupresp: bod.data,\n            })\n            setLoading({\n                loading: false\n            })\n        }).catch((error) => {\n            console.log(error);\n        })\n        } , 400)\n     }, [boxfilerid , groupid, grouptype])\n \n    useEffect(() => {\n       setLoading({\n           loading: true\n       })\n       if (boxfiler === true) {\n        fetchFolders();\n       }\n    }, [boxfiler, fetchFolders])\n\n\n    if (boxfiler === true) {   \n     const OutputFiler = ({outputfile , currentfilename}) => {    \n        if (outputfile === true) {\n            return (\n                <div>\n                    <div className=\"modal-edu-white\">\n                        <div className=\"container\">\n                          <div className=\"modal-padding\">\n                             <span className=\"closebtndark\" onClick={() => {\n                                setOutputFile({\n                                    outputfile: false\n                                })\n                             }}>&times;</span>\n                              <h3>{currentfilename}</h3>\n                              <div className=\"input-container\">\n                                <div className=\"row\">\n                                 <div className=\"col-md-12\">\n                                 <div className=\"float-left\">\n                                    <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                    <button className=\"button-submit-blue\" onClick={() => {\n                                        setCommentFile({\n                                            commentfile: true\n                                        })\n                                        setNotesComment({\n                                            notescomment: false\n                                        })\n                                    }}>COMMENTS</button>\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                    <button className=\"button-submit\" onClick={() => {\n                                        setCommentFile({\n                                            commentfile: false\n                                        })\n                                        setNotesComment({\n                                            notescomment: true\n                                        })\n                                    }}>NOTES</button>\n                                    </div>\n                                    </div>\n                                 </div>\n                                 </div>\n                                </div>\n                              </div>\n                              <FileComments \n                              filecomment={commentfile.commentfile} \n                              currentfileid={currentfileid.currentfileid} \n                              currentfolderid={currentfolderid.currentfolderid} \n                              currentfilename={currentfilename}  \n                              type={currentfiletype.currentfiletype}\n                              url={url.url}\n                              groupid={groupid}\n                              grouptype={grouptype}\n                              boxfilerid={boxfilerid}\n                              />\n                              <FileNotes\n                              filenotes={notescomment.notescomment}\n                              url={url.url}\n                              type={currentfiletype.currentfiletype}\n                              currentfilename={currentfilename}\n                              groupid={groupid}\n                              grouptype={grouptype}\n                              boxfilerid={boxfilerid}\n                              currentfileid={currentfileid.currentfileid}\n                              currentfolderid={currentfolderid.currentfolderid}\n                              />\n                          </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        } else {    \n            return null;\n        }\n    }\n\n\n    const Folders = () => {\n        if (groupres.groupresp.length > 0) {\n            return (\n                <div>\n                    {\n                        groupres.groupresp.map(item => (\n                            <div key={groupres.groupresp.indexOf(item)}>\n                             <div className=\"folder-component-padding\">\n                             <div className=\"folder-output\">\n                              <div className=\"row\">\n                               <div className=\"col-md-10\" onClick={() => {\n                                 const foldername = document.getElementById(item.foldername);\n                                 if (foldername.classList.contains('hide') === true) {\n                                     foldername.classList.remove('hide');\n                                 } else {\n                                     foldername.classList.add('hide');\n                                 }\n                             }}>\n                                <h6 className=\"folder-subheader\">{item.files.length + \" files\"}</h6>\n                                <h4>{item.foldername}</h4>\n                               </div>\n                               <div className=\"col-md-2\">\n                                <div className=\"button-padding\">\n                                <button className=\"button-submit\" onClick={() => {\n                                    setAddFileModal({\n                                        addfilemodal: true\n                                    })\n                                    setCurrentFolderName({\n                                        currentfoldername: item.foldername,\n                                    })\n                                    setCurrentFolderId({\n                                        currentfolderid: item.folderid\n                                    })\n                                }}>ADD FILES</button>\n                                </div>\n                               </div>\n                              </div>\n                             </div>\n                             <div id={item.foldername} className=\"file-components hide\">\n                              {\n                                  item.files.map(index => (\n                                      <div key={item.files.indexOf(index)}>\n                                          <div className=\"file-output\" onClick={() => {\n                                            firebase.storage().ref(groupid + '/' + boxfilerid + '/' + item.folderid + '/' + index.filename)\n                                            .getDownloadURL().then((url) => {\n                                                var xhr = new XMLHttpRequest();\n                                                xhr.responseType = 'blob';\n                                                xhr.onload = (event) => {\n                                                    var blob = xhr.response;\n                                                    console.log(blob)\n                                                };\n                                                xhr.open('GET', url);\n                                                xhr.send();\n                                                setUrl({\n                                                    url: url\n                                                })\n                                                setCurrentFileName({\n                                                    currentfilename: index.filename\n                                                })\n                                                setOutputFile({\n                                                    outputfile: true\n                                                })\n                                                setCurrentFolderId({\n                                                    currentfolderid: item.folderid\n                                                })\n                                               setCurrentFileId({\n                                                   currentfileid: index.fileid\n                                               })\n                                               setCurrentFileType({\n                                                   currentfiletype: index.filetype\n                                               })\n                                                \n                                            }).catch((error) => {\n                                                console.log(error);\n                                            })\n                                          }}>\n                                            <h6>{index.filename}</h6>\n                                          </div>\n                                      </div>\n                                  ))\n                              }\n                             </div>\n                             </div>\n                            </div>\n                        ))\n                    }\n                </div>\n            )   \n        } else {\n                return (\n                    <div>\n                      <div className=\"empty-container\">\n                          <h1 className=\"text-center\">THERE ARE NO FOLDERS IN THE GROUP</h1>\n                      </div>\n                    </div>\n                )\n            }\n    }\n     \n    const AddFileModal = ({addfilemodal , currentfolderid, currentfoldername}) => {\n        if (addfilemodal === true) {\n            return (\n                <div>\n                    <div className=\"modal-edu\">\n                      <div className=\"container\">\n                        <div className=\"modal-padding\">\n                         <div className=\"modal-header-blue\">\n                         <span className=\"closebtnwhite\" onClick={() => {\n                             setAddFileModal({\n                                 addfilemodal: false\n                             })\n                         }}>&times;</span>\n                           <h2>{ 'Add Files to ' + currentfoldername}</h2>\n                         </div>\n                         <div className=\"modal-container\">\n                          <div className=\"box-blue\" onDrop={(e) => {\n                              e.preventDefault();\n                              const files = e.dataTransfer.files;\n                              const filedata = [];\n                              for (let i = 0; i < files.length; i++) {\n                                  const fileid = generateId(98);\n                                  const filejson = {}\n                                  filejson['filename'] = files[i].name;\n                                  filejson['filetype'] = files[i].type;\n                                  filejson['filesize'] = files[i].size;\n                                  filejson['fileid'] = fileid\n                                  filedata.push(filejson);\n                             }\n\n                              const data = {\n                                  folderid: currentfolderid,\n                                  filedata: filedata\n                              }\n                              \n                              axios.post('https://vincobackend.herokuapp.com/api/boxfiler/addfiles/'  + grouptype + '/' + groupid + '/' + boxfilerid + '/' + data.folderid, data,{\n                                  headers: {\n                                    'Accept': 'application/json',\n                                    'Content-Type': 'application/json'\n                                  },\n                              }).then((body) => {\n                                  if(body.data.res === true) {\n                                      for(let j = 0; j < files.length; j++) {\n                                        firebase.storage().ref(groupid  + '/' + boxfilerid + '/' + data.folderid + '/' + files[j].name)\n                                        .put(files[j]);\n                                      }\n                                      setAddFileModal({\n                                          addfilemodal: false\n                                      })\n\n                                      fetchFolders();\n                                  }\n                              }).catch((error) => {\n                                  console.log(error);\n                              })\n                          }} onDragOver={(e) => {\n                              e.preventDefault();\n                          }} onDragLeave={(e) => {\n                              e.preventDefault();\n                          }}>\n                            <div className=\"row\">\n                             <div className=\"col-md-4\">\n                              <h3 className=\"text-center\">DROP FILES HERE</h3>\n                             </div>\n                             <div className=\"col-md-4\">\n                              <h3 className=\"text-center\">OR</h3>\n                             </div>\n                             <div className=\"col-md-4\">\n                              <input type=\"file\" onChange={(e) => {\n                                  const files = e.target.files;\n                                  const filedata = [];\n                                  for (let i = 0; i < files.length; i++) {\n                                      const fileid = generateId(98);\n                                      const filejson = {}\n                                      filejson['filename'] = files[i].name;\n                                      filejson['filetype'] = files[i].type;\n                                      filejson['filesize'] = files[i].size;\n                                      filejson['fileid'] = fileid\n                                      filedata.push(filejson);\n                                 }\n    \n                                  const data = {\n                                      folderid: currentfolderid,\n                                      filedata: filedata\n                                  }\n                                  \n                                  axios.post('https://vincobackend.herokuapp.com/api/boxfiler/addfiles/'  + grouptype + '/' + groupid + '/' + boxfilerid + '/' + data.folderid, data,{\n                                      headers: {\n                                        'Accept': 'application/json',\n                                        'Content-Type': 'application/json'\n                                      },\n                                  }).then((body) => {\n                                      if(body.data.res === true) {\n                                          for(let j = 0; j < files.length; j++) {\n                                            firebase.storage().ref(groupid  + '/' + boxfilerid + '/' + data.folderid + '/' + files[j].name)\n                                            .put(files[j]);\n                                          }\n                                          setAddFileModal({\n                                              addfilemodal: false\n                                          })\n\n                                          fetchFolders();\n                                      }\n                                  }).catch((error) => {\n                                      console.log(error);\n                                  })\n                              }} multiple/>\n                             </div>\n                            </div>\n                          </div>\n                         </div>\n                        </div>\n                      </div>\n                    </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n      const FolderModal = ({foldermodal}) => {\n        const [foldername , setFolderName] = useState({\n            foldername: ''\n        })\n        \n        console.log(foldername);\n            if (foldermodal === true) {\n                return (\n                    <div>\n                      <div className=\"modal-edu\">\n                        <div className=\"container\">\n                         <div className=\"modal-padding\">\n                         <div className=\"modal-header-white\">\n                         <span className=\"closebtnlightblue\" onClick={() => {\n                                setFolderModal({\n                                    foldermodal: false\n                                })\n                            }}>&times;</span>\n                            <h3>CREATE FOLDER</h3>\n                         </div>\n                          <div className=\"modal-blue-container\">\n                            <div className=\"input-container\">\n                                <div className=\"group\">      \n                                    <input type=\"text\" className=\"inputbar-white\" name=\"foldername\" onChange={(e) => {\n                                        setFolderName({\n                                            foldername: e.target.value\n                                        })\n                                    }} required />\n                                    <span className=\"highlight-white\"></span>\n                                    <span className=\"bar-white\"></span>\n                                    <label className=\"labelbar-white\">Name of Group</label>\n                                </div>\n                            </div>\n                            <div className=\"input-container\">\n                              <div className=\"drop-box\" onDrop={(e) => {\n                                  e.preventDefault();\n                                  const files = e.dataTransfer.files;\n                                  const filedata = [];\n                                  for (let i = 0; i < files.length; i++) {\n                                      const fileid = generateId(98);\n                                      const filejson = {}\n                                      filejson['filename'] = files[i].name;\n                                      filejson['filetype'] = files[i].type;\n                                      filejson['filesize'] = files[i].size;\n                                      filejson['fileid'] = fileid\n                                      filedata.push(filejson);\n                                 }\n    \n                                  const folderid = generateId(50);\n    \n                                  const data = {\n                                      foldername: foldername.foldername,\n                                      folderid: folderid,\n                                      filedata: filedata\n                                  }\n                                  \n                                  axios.post('https://vincobackend.herokuapp.com/api/boxfiler/createfolder/'  + grouptype + '/' + groupid + '/' + boxfilerid + '/' + data.folderid, data,{\n                                      headers: {\n                                        'Accept': 'application/json',\n                                        'Content-Type': 'application/json'\n                                      },\n                                  }).then((body) => {\n                                      if(body.data.res === true) {\n                                          for(let j = 0; j < files.length; j++) {\n                                            firebase.storage().ref(groupid  + '/' + boxfilerid + '/' + folderid + '/' + files[j].name)\n                                            .put(files[j]);\n                                          }\n                                          setFolderModal({\n                                              foldermodal: false\n                                          })\n    \n                                          fetchFolders();\n                                      }\n                                  }).catch((error) => {\n                                      console.log(error);\n                                  })\n                              }} onDragOver={(e) => {\n                                e.preventDefault();\n                                return false\n                              }} onDragLeave={(e) => {\n                                  e.preventDefault();\n                                  return false\n                              }}>\n                                <div className=\"row\">\n                                 <div className=\"col-md-4\">\n                                  <h3 className=\"text-center\">DROP FILES HERE</h3>\n                                 </div>\n                                 <div className=\"col-md-4\">\n                                  <h3 className=\"text-center\">OR</h3>\n                                 </div>\n                                 <div className=\"col-md-4\">\n                                  <input type=\"file\" onChange={(e) => {\n                                      const files = e.target.files;\n                                      const filedata = [];\n                                      for (let i = 0; i < files.length; i++) {\n                                          const fileid = generateId(98);\n                                          const filejson = {}\n                                          filejson['filename'] = files[i].name;\n                                          filejson['filetype'] = files[i].type;\n                                          filejson['filesize'] = files[i].size;\n                                          filejson['fileid'] = fileid\n                                          filedata.push(filejson);\n                                     }\n    \n                                      const folderid = generateId(50);\n    \n                                      const data = {\n                                          foldername: foldername.foldername,\n                                          folderid: folderid,\n                                          filedata: filedata\n                                      }\n                                      \n                                      axios.post('https://vincobackend.herokuapp.com/api/boxfiler/createfolder/'  + grouptype + '/' + groupid + '/' + boxfilerid + '/' + data.folderid, data,{\n                                          headers: {\n                                            'Accept': 'application/json',\n                                            'Content-Type': 'application/json'\n                                          },\n                                      }).then((body) => {\n                                          if(body.data.res === true) {\n                                            for (let j = 0; j < files.length; j++) {\n                                                firebase.storage().ref(groupid  + '/' + boxfilerid + '/' + data.folderid + '/' + files[j].name)\n                                                .put(files[j]);\n                                            }\n                                              setFolderModal({\n                                                  foldermodal: false\n                                              })\n    \n                                              fetchFolders();\n                                          }\n                                      }).catch((error) => {\n                                          console.log(error);\n                                      })\n    \n                                  }} multiple/>\n                                 </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                         </div>\n                        </div>\n                      </div>\n                    </div>\n                )\n            } else  {\n                return null;\n            }\n        }\n\n        return (\n          <div>\n             <div className=\"folders-container\">\n             <div>\n                <div className=\"group-page\">\n                <div className=\"float-right\">\n                    <button className=\"button-submit\" onClick={() => {\n                        setFolderModal({\n                            foldermodal: true\n                        })\n                    }}>CREATE FOLDER</button>\n                    </div>\n                    <h2>FOLDERS</h2>\n                </div>\n                <LoadingBlue loading={loading.loading}/>\n                <div>\n                <Folders/>\n                </div>\n                <FolderModal foldermodal={foldermodal.foldermodal}/>\n                <AddFileModal addfilemodal={addfilemodal.addfilemodal} currentfolderid={currentfolderid.currentfolderid} currentfoldername={currentfoldername.currentfoldername}/>\n                <OutputFiler currentfilename={currentfilename.currentfilename} url={url.url} outputfile={outputfile.outputfile}/>\n                </div>\n             </div>\n          </div>\n        )\n    } else {\n        return null;\n    }\n\n}\n\nexport default BoxFiler;","import React, {useState, useEffect, useRef} from 'react';\nimport LoadingBlue from '../../../../Comps/Loadingblue';\nimport axios from 'axios'\nconst ConnectionsHome = ({connectionhome , groupclientid, groupname, groupid}) => {\n    const [pageload, setPageLoad] = useState({\n        pageload: true\n    })\n    const [connectionsmade, setConnectionsMade] = useState({\n        connectionsmade: []\n    }) \n    const [connectionmodal, setConnectionModal] = useState({\n        connectionmodal: false\n    })\n    const [connectionResults, setConnectionResult] = useState({\n        connectionResults: false\n    })\n    const [requestconnection, setRequestConnection] = useState({\n        requestconnection: {}\n    })\n    const [finalconnectionname, setFinalConnectionName] = useState({\n        finalconnectionname: ''\n    })\n\n    const componentMounted = useRef(null);\n\n    useEffect(() => {\n     componentMounted.current = true;\n     if (componentMounted.current) {\n        axios.get('https://vincobackend.herokuapp.com/connection/fetchconnections/' + groupid)\n        .then((body) => {\n            setConnectionsMade({\n                connectionsmade: body.data\n            })\n            setPageLoad({\n                pageload: false\n            })\n        }).catch((error) => {\n            console.log(error);\n        })\n     }\n\n     return () => {componentMounted.current = false}\n    }, [groupid])\n \n    const ShowConnectionGroups = () => {\n        if (connectionsmade.connectionsmade.length > 0) {\n            return (\n                <div>\n                 <div className=\"row\">\n                    {\n                        connectionsmade.connectionsmade.map((item) => (\n                            <div key={connectionsmade.connectionsmade.indexOf(item)}>\n                              <div className=\"group-spacing\">\n                              <div className=\"pending-group-card-blue slightshadow\">\n                              <div className=\"pending-group-card-padding\">\n                                <h5 className=\"text-center\">{item.connectionname}</h5>\n                              </div>\n                              </div>\n                              </div>\n                            </div>\n                        ))\n                    }\n                 </div>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <div className=\"connections-container-empty\">\n                        <div className=\"no-connections-container\">\n                        <h3>{groupname + ' has no connections made with any other groups'}</h3>\n                        <div className=\"button-padding\">\n                        <button className=\"button-submit justify-content-center\" onClick={() => {\n                           setConnectionModal({\n                               connectionmodal: true\n                           })\n                        }}>MAKE A CONNECTION</button>\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n\n    const PendingConnections = () => {\n        const [pendingConnections, setPendingConnections] = useState({\n            pendingConnections: false\n        })\n\n        const PendingGroups = () => {\n        const [pendingGroups, setPendingGroups] = useState({\n          pendingGroups: []\n        })\n\n        const subComponent = useRef(null);\n\n        useEffect(() => {\n         subComponent.current = true\n         if (subComponent.current) {\n            axios.get('https://vincobackend.herokuapp.com/connection/getpendingconnections/' + groupid)\n            .then((body) => {\n                setPendingGroups({\n                    pendingGroups: body.data\n                })\n            }).catch((error) => {\n                console.log(error);\n            })\n         }\n\n         return () => {subComponent.current = false}\n        }, [])\n\n        if (pendingGroups.pendingGroups.length > 0) {\n            return (\n                <div>\n                 <div className=\"row\">\n                  {\n                      pendingGroups.pendingGroups.map((item) => (\n                          <div key={pendingGroups.pendingGroups.indexOf(item)}>\n                             <div className=\"group-spacing\">\n                             <div className=\"pending-card\">\n                               <h4 className=\"text-center\">{item.connectionname}</h4>\n                               <div className=\"d-flex justify-content-center\">\n                               <button className=\"button-submit-white\" onClick={() => {\n                                   axios.get('https://vincobackend.herokuapp.com/connection/createconnection/' + item.responseclientid + '/' + item.requestedclientid + '/' + item.pathconnectionid)\n                                   .then((body) => {\n                                    connectionsmade.connectionsmade.push(body.data);\n                                    setConnectionsMade({\n                                        connectionsmade: connectionsmade.connectionsmade\n                                    })\n                                    setPendingConnections({\n                                        pendingConnections: false\n                                    })\n                                  }).catch((error) => {\n                                    console.log(error);\n                                  })\n                               }}>CONNECT</button>\n                               </div>\n                             </div>\n                             </div>\n                          </div>\n                      ))\n                  }\n                 </div>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <div className=\"group-component-padding\">\n                      <h3 className=\"text-center\">THERE ARE NO PENDING CONNECTIONS</h3>\n                    </div>\n                </div>\n            )\n        }\n        \n        }\n        \n        const PendingPage = ({pendingpage}) => {\n            if (pendingpage === true) {\n                return (\n                    <div>\n                     <div className=\"modal-edu\">\n                     <div className=\"container\">\n                      <div className=\"modal-padding\">\n                        <div className=\"modal-container\">\n                        <span className=\"closebtndark\" onClick={() => {\n                            setPendingConnections({\n                                pendingConnections: false\n                            })\n                        }}>&times;</span>\n                        <h2>{`${groupname} Connections`}</h2>\n                        <div className=\"title-padding\">\n                         <PendingGroups/>\n                        </div>\n                        </div>\n                      </div>\n                     </div>\n                     </div>\n                    </div>\n                )\n            } else {\n                return null;\n            }\n         }\n\n         return (\n             <div>\n              <div className=\"button-padding\">\n                <button className=\"button-submit-blue\" onClick={() => {\n                    setPendingConnections({\n                        pendingConnections: true\n                    })\n                }}>PENDING CONNECTIONS</button>\n                <PendingPage pendingpage={pendingConnections.pendingConnections}/>\n              </div>\n             </div>\n         )\n    }\n    \n    const ConnectionResults = ({connectionresults , currentrequest}) => {\n     if (connectionresults === true) {\n        return (\n            <div>\n            <div className=\"modal-edu\">\n             <div className=\"container\">\n              <div className=\"modal-padding\">\n               <div className=\"modal-container\">\n                <span className=\"closebtndark\" onClick={() => {\n                  setConnectionModal({\n                      connectionmodal: true\n                  })\n                  setConnectionResult({\n                      connectionResults: false\n                  })\n                }}>&times;</span>\n               <div className=\"title-padding\">\n               <h2>{currentrequest.groupname}</h2>\n               </div>\n               <h5>{\"GROUP CODE: \" + currentrequest.clientid}</h5>\n               <h4>{currentrequest.groupdescription}</h4>\n               <div className=\"button-padding justify-content-center\">\n                <button className=\"button-submit\" onClick={() => {\n  \n                  const data = {\n                    requestedclientid: currentrequest.clientid,\n                    responseclientid: groupclientid,\n                    requestedgroupname: currentrequest.groupname,\n                    responsegroupname: groupname,\n                    connectionname: finalconnectionname.finalconnectionname\n                  }\n  \n                 \n                  \n                  axios.put('https://vincobackend.herokuapp.com/connection/requestconnection/' + data.responseclientid + '/' + data.requestedclientid, data,{\n                    headers: {\n                      'Accept': 'application/json',\n                      'Content-Type': 'application/json'\n                    },\n                  }).then(() => {\n                    setConnectionResult({\n                        connectionResults: false\n                    })\n                  }).catch((error) => {\n                    console.log(error)\n                  })\n                  \n  \n                }}>CONNECT</button>\n               </div>\n               </div>\n              </div>\n             </div>\n            </div>\n          </div>\n        )\n     } else {\n         return null;\n     }\n    }\n\n\n     const RequestModal = () => {\n            const [error, setError] = useState({\n                error: false \n            })\n            \n            const ErrorMsg = ({errormessage}) => {\n                if (errormessage === true) {\n                   return (\n                       <div>\n                         <div className=\"error-message\">\n                         <h6>You can not connect with your own group</h6>\n                         </div>\n                       </div>\n                   )\n                } else {\n                    return null\n                }\n            }\n\n\n        const ModalRequest = ({requestmodal}) => {\n            const [connectioninput, setConnectionInput] = useState({\n               connectioninput: ''\n             })\n            const [connectionname, setConnectionName] = useState({\n                connectionname: ''\n            })\n            if (requestmodal === true) {\n                return (\n                    <div>\n                        <div>\n                            <div className=\"modal-edu\">\n                            <div className=\"container\">\n                                <div className=\"modal-padding\">\n                                <div className=\"modal-blue-container\">\n                                <span className=\"closebtnwhite\" onClick={() => {\n                                    setConnectionModal({\n                                        connectionmodal: false\n                                    })\n                                }}>&times;</span>\n                                <div className=\"thirty-padding\">\n                                    <h3>SEARCH THE GROUP YOU WANT CONNECT WITH</h3>\n                                    <h6>Give the connectiona a name and the group code to find the group to connect with</h6>\n                                    <div className=\"input-container\">\n                                    <ErrorMsg errormessage={error.error}/>\n                                    <div className=\"group\">      \n                                            <input type=\"text\" className=\"inputbar-white\" name=\"connectionname\" onChange={(e) => {\n                                                        setConnectionName({\n                                                        connectionname: e.target.value\n                                                        })\n                                                    }} onKeyDown={(e) => {\n                                                        if (e.keyCode === 13) {\n                                                            console.log('something')\n                                                        }\n                                                    }} required />\n                                                    <span className=\"highlight-white\"></span>\n                                                    <span className=\"bar-white\"></span>\n                                                    <label className=\"labelbar-white\">Give the connection a name</label>\n                                    </div>\n                                    </div>\n                                    <div className=\"input-container\">\n                                    <ErrorMsg errormessage={error.error}/>\n                                    <div className=\"group\">      \n                                            <input type=\"text\" className=\"inputbar-white\" name=\"connectioninput\" onChange={(e) => {\n                                                        setConnectionInput({\n                                                        connectioninput: e.target.value\n                                                        })\n                                                    }} onKeyDown={(e) => {\n                                                        if (e.keyCode === 13) {\n                                                            console.log('something')\n                                                        }\n                                                    }} required />\n                                                    <span className=\"highlight-white\"></span>\n                                                    <span className=\"bar-white\"></span>\n                                                    <label className=\"labelbar-white\">Search Group by code</label>\n                                    </div>\n                                    </div>\n                                    <div className=\"button-padding\">\n                                    <button className=\"button-white\" onClick={() => {\n                                    if (connectioninput.connectioninput !== groupclientid) {\n                                        axios.get('https://vincobackend.herokuapp.com/connection/getgroup/' + connectioninput.connectioninput)\n                                        .then((bod) => {\n                                            setFinalConnectionName({\n                                                finalconnectionname: connectionname.connectionname\n                                            })\n                                            setConnectionResult({\n                                                connectionResults: true\n                                            })\n                                            setConnectionModal({\n                                                connectionmodal: false\n                                            })\n                                            setRequestConnection({\n                                                requestconnection: bod.data\n                                            })\n                                        }).catch((error) => {\n                                        console.log(error)\n                                        })\n                                    } else {\n                                       setError({\n                                           error: true\n                                       })\n                                    }\n                                    }}>SEARCH</button>\n                                    </div>\n                                    </div>\n                                </div>\n                                </div>\n                            </div>\n                            </div>\n                            </div>\n                    </div>\n                )\n            } else {\n                return null;\n            }\n            }\n\n            return (\n                <div>\n                <div className=\"button-padding\">\n                <button className=\"button-submit justify-content-center\" onClick={() => {\n                 setConnectionModal({\n                     connectionmodal: true\n                 })\n               }}>MAKE A CONNECTION</button>\n                </div>\n               <ModalRequest requestmodal={connectionmodal.connectionmodal}/>\n                </div>\n            )\n        }\n    \n    if (connectionhome === true) {\n       return (\n        <div>\n        <div className=\"connection-home\">\n         <div className=\"row\">\n         <div className=\"col-md-6\">\n          <h1>Connections</h1>\n         </div>\n         <div className=\"col-md-6\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n            <RequestModal requestmodal={connectionmodal.connectionmodal}/>\n            </div>\n            <div className=\"col-md-6\">\n            <PendingConnections/>\n            </div>\n          </div>\n         </div>\n         </div>\n        <ShowConnectionGroups/>\n        <LoadingBlue loading={pageload.pageload}/>\n        <ConnectionResults currentrequest={requestconnection.requestconnection} connectionresults={connectionResults.connectionResults}/>\n        </div>\n        </div>\n       )\n    } else {\n        return null;\n    }\n}\n\nexport default ConnectionsHome","import React, {useState , useEffect} from 'react';\nimport firebase from '../basefile';\nimport {generateId} from '../functions';\nconst FilterUsers = ({cardstyle , buttonstyle , data , api}) => {\n\n    const [allusers , setUsers] = useState({\n        allusers: []\n    })\n    const [suggestionarray , setSuggestions] = useState({\n        suggestions: []\n    })\n\n    const RenderSuggestions = () => {\n        const {suggestions} = suggestionarray\n        if (suggestions.length === 0) {\n            return null\n        }\n        \n\n        return (\n            <div>\n              {suggestions.map(item => (\n                  <div key={generateId(10)}>\n                    <div className={cardstyle}>\n                      <div className=\"row\">\n                        <div className=\"col-md-10\">\n                          <h6>{item.email}</h6>\n                          <h4>{item.firstname + ' ' + item.lastname}</h4>\n                        </div>\n                        <div className=\"col-md-2\">\n                         <div className=\"button-padding\">\n                          <button className={buttonstyle} onClick={() => {\n                                fetch(\"/api/group/adduser/pending/\" + api  + \"/\" +  item.useruid, {\n                                  method: 'PUT',\n                                  headers: {\n                                    'Accept': 'application/json',\n                                    'Content-Type': 'application/json'\n                                },\n                                body: JSON.stringify(data)\n                                }).then(() => {\n                                  console.log('this worked');\n                                }).catch((error) => {\n                                  console.log(error)\n                              })\n                          }}>ADD USER</button>\n                         </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n              ))}\n            </div>\n        )\n    }\n\n    useEffect(() => {\n        setTimeout(() => {\n        fetch('/user/getallusers')\n        .then((res) => {\n          return res.json();\n        }).then((body) => {\n          const newbody = body.filter(index => index.useruid !== firebase.auth().currentUser.uid)\n          setUsers({\n            allusers: newbody\n          })\n         }).catch((error) => {\n          console.log(error)\n        })\n     }, 500);\n    } , [])\n\n    return (\n        <div>\n         <div className=\"input-container\">\n            <div className=\"group\">      \n             <input type=\"text\" className=\"inputbar\" name=\"searchvalue\" onChange={(e) => {\n                 let suggestions = [];\n                 if (e.target.value.length > 0) {\n                   const regex = new RegExp(`^${e.target.value}` , 'i');\n                   suggestions = allusers.allusers.sort().filter(v => regex.test(v.firstname));\n                  }\n  \n                  setSuggestions({\n                      suggestions: suggestions\n                  })\n                 }} required />\n                 <span className=\"highlight\"></span>\n                 <span className=\"bar\"></span>\n                 <label className=\"labelbar\">People you want to add</label>\n             </div>\n            <RenderSuggestions/>\n         </div>           \n        </div>\n    )\n}\n\nexport default FilterUsers;","import React from 'react';\nimport firebase from '../../../../../ServerSide/basefile';\nimport {generateId} from '../../../../../ServerSide/functions';\nimport axios from 'axios';\nclass Adduserssubgroup extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      allusers: [],\n      suggestions: []\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      axios.get('https://vincobackend.herokuapp.com/api/group/getgroupusers/' + this.props.groupid )\n      .then((body) => {\n        const newbody = body.data.users.filter(index => index !== firebase.auth().currentUser.uid)\n        const bodyarray = []\n        newbody.forEach((item) => {\n          axios.get('https://vincobackend.herokuapp.com/api/group/getusers/' + item)\n            .then((response) => {\n               bodyarray.push(response.data);\n            }).catch((error) => {\n              console.log(error)\n            })\n        })\n        this.setState({\n          allusers: bodyarray\n        })\n       }).catch((error) => {\n        console.log(error)\n      })\n   }, 500);\n  }\n\n     RenderSuggestions = () => {\n        const {suggestions} = this.state\n        if (suggestions.length === 0) {\n            return null\n        }\n        return (\n            <div>\n              {suggestions.map(item => (\n                  <div key={generateId(10)}>\n                    <div className=\"suggest-card\">\n                      <div className=\"row\">\n                        <div className=\"col-md-10\">\n                          <h6>{item.email}</h6>\n                          <h4>{item.firstname + ' ' + item.lastname}</h4>\n                        </div>\n                        <div className=\"col-md-2\">\n                         <div className=\"button-padding\">\n                          <button className=\"button-submit\" onClick={() => {\n                              this.props.array.push(item.useruid)\n                          }}>ADD USER</button>\n                         </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n              ))}\n            </div>\n        )\n    }\n\n    ManipulateInput = () => {\n      return (\n        <div>\n          <div className=\"group\">      \n           <input type=\"text\" className=\"inputbar\" name=\"searchvalue\" onChange={(e) => {\n               let suggestions = [];\n               if (e.target.value.length > 0) {\n                 const {allusers} = this.state\n                 const regex = new RegExp(`^${e.target.value}` , 'i');\n                 suggestions = allusers.sort().filter(v => regex.test(v.firstname));\n                }\n\n                this.setState({\n                    suggestions: suggestions\n                })\n               }} required />\n               <span className=\"highlight\"></span>\n               <span className=\"bar\"></span>\n               <label className=\"labelbar\">People you want to add</label>\n           </div>\n        </div>\n      )\n    }\n\n    render() {\n    console.log(this.state);\n    return (\n      <div>\n       <div className=\"input-container\">\n          <this.ManipulateInput/>\n          <this.RenderSuggestions/>\n       </div>           \n      </div>\n  )\n    }\n}\n\nexport default Adduserssubgroup;","import React from 'react';\nimport Adduserssubgroup from './functions/Adduserssubgroup';\nimport {generateId} from '../../../../ServerSide/functions';\nimport firebase from '../../../../ServerSide/basefile';\nimport {NavLink} from 'react-router-dom';\nimport axios from 'axios';\nclass Subgrouphome extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            subgroupres: [],\n            subgroupmodal: false,\n            subgroupname: '',\n            subgroupdescription: '',\n            subgroupusers: [],\n            subgroupaddedmembers: [],\n            areyouinthissubgroup: true\n        }\n    }\n\n    fetchSubgroups = () => {\n        setTimeout(() => {\n            axios.get('https://vincobackend.herokuapp.com/api/subgroup/getusersubgroups/' + this.props.grouptype + '/' + this.props.groupid + '/' + firebase.auth().currentUser.uid)\n            .then((res) => {\n                    this.setState({\n                        subgroupres: res.data\n                    })\n            }).catch((error) => {\n                console.log(error);\n            })\n        }, 500);\n    }\n\n    componentDidMount() {\n        this.fetchSubgroups();\n    }\n\n    SwitchTitleSubgroup = () => {\n        if (this.state.subgroupname > 0) {\n            return (\n                <div>\n                  <h5>{`Are you in the ${this.state.subgroupname} Sub group?`}</h5>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                  <h3>Are you in this subgroup?</h3>\n                </div>\n            )\n        }\n    }\n\n    OutputSubgroups = () => {\n        return (\n            <div>\n             <div className=\"row\">\n                {this.state.subgroupres.map((item) => (\n                    <div key={this.state.subgroupres.indexOf(item)}>\n                    <div className=\"group-spacing\">\n                     <NavLink className=\"groupnav\" to={\"/subgroup/\" + item.grouptype + '/' + item.maingroupapi + \"/\" + item.subgroupapi}>\n                      <div className=\"group-card-pretty-blue slightshadow\">\n                        <h3 className=\"text-center\">{item.subgroupname}</h3>\n                      </div>\n                     </NavLink>\n                    </div>\n                    </div>\n                ))}\n             </div>\n            </div>\n        )\n    }\n    \n\n    CreateSubGroup = ({subgroupmodal}) => {\n        if (subgroupmodal === true) {\n            return (\n                <div>\n                 <div className=\"modal-edu\">\n                  <div className=\"container\">\n                   <div className=\"modal-padding\">\n                    <div className=\"modal-header-white\">\n                     <span className=\"closebtndark\" onClick={() => {\n                         this.setState({\n                           subgroupmodal: false\n                         })\n                     }}>&times;</span>\n                      <h3>CREATE A SUBGROUP</h3>\n                    </div>\n                    <div className=\"modal-container\">\n                     <div className=\"input-container\">\n                        <div className=\"group\">      \n                            <input type=\"text\" className=\"inputbar\" name=\"subgroupname\" onChange={(e) => {\n                            this.setState({\n                                [e.target.name]: e.target.value\n                            })\n                            }} required />\n                            <span className=\"highlight\"></span>\n                            <span className=\"bar\"></span>\n                            <label className=\"labelbar\">Name of Subgroup</label>\n                        </div>\n                     </div>\n                     <div className=\"input-container\">\n                        <div className=\"group\">      \n                            <input type=\"text\" className=\"inputbar\" name=\"subgroupdescription\" onChange={(e) => {\n                            this.setState({\n                                [e.target.name]: e.target.value\n                            })\n                            }} required />\n                            <span className=\"highlight\"></span>\n                            <span className=\"bar\"></span>\n                            <label className=\"labelbar\">Description of Subgroup</label>\n                        </div>\n                     </div>\n                     <div className=\"input-container\">\n                        <this.SwitchTitleSubgroup/>\n                        <label>\n                            <input type=\"checkbox\" checked={this.state.areyouinthissubgroup} name=\"areyouinthissubgroup\" onChange={(e) => {\n                                this.setState({\n                                    [e.target.name]: e.target.checked\n                                })\n                            }}/>\n                            Yes\n                        </label>\n                     </div>\n                     <Adduserssubgroup groupid={this.props.groupid} array={this.state.subgroupaddedmembers}/>\n                     <div className=\"button-padding\">\n                      <button className=\"button-submit\" onClick={() => {\n                          const data = {\n                              subgroupname: this.state.subgroupname,\n                              subgroupdescription: this.state.subgroupdescription,\n                              subgroupmembers: this.state.subgroupaddedmembers,\n                              subgroupid: generateId(41),\n                              subgrouppost: generateId(42),\n                              subboxfiler: generateId(43),\n                              subchat: generateId(44),\n                              areyouinthissubgroup: this.state.areyouinthissubgroup,\n                              maingroupapi: this.props.groupapi,\n                              subgroupapi: generateId(38),\n                              groupid: this.props.groupid,\n                              grouptype: this.props.grouptype,\n                              subid: this.props.subgroupid,\n                              mainboxfilerid: this.props.mainboxfilerid,\n                              maingroupname: this.props.groupname\n                          }\n                          \n                          axios.put('https://vincobackend.herokuapp.com/api/subgroup/createsubggroup/' + this.props.grouptype + '/' + this.props.groupid  + '/' + this.props.subgroupid + '/' + firebase.auth().currentUser.uid, data,{\n                            headers: {\n                              'Accept': 'application/json',\n                              'Content-Type': 'application/json'\n                            },\n                        }).then(() => {\n                            console.log('this worked')\n                            this.setState({\n                              subgroupmodal: false\n                            })\n\n                            this.fetchSubgroups()\n                        }).catch((error) => {\n                            console.log(error);\n                        })\n\n                      }}>CREATE SUBGROUP</button>\n                     </div>\n                    </div>\n                   </div>\n                  </div>\n                 </div>\n                </div>\n            )\n        } else {    \n            return null;\n        }\n    }\n\n\n    render () {\n        console.log(this.state);\n        return (\n            <div>\n             <div className=\"float-right\">\n              <button className=\"button-submit-blue\" onClick={() => {\n                  this.setState({\n                      subgroupmodal: true\n                  })\n              }}>CREATE SUBGROUP</button>\n             </div>\n             <h1>Subgroups</h1>\n             <div className=\"input-container\">\n              <this.OutputSubgroups/>\n             </div>\n             <this.CreateSubGroup subgroupmodal={this.state.subgroupmodal}/>\n            </div>\n        )\n    }\n}\n\nconst Subgroup = ({subgroupcomp , groupname , groupid , subgroupid, grouptype , groupapi , mainboxfilerid}) => {\n    if (subgroupcomp === true) {\n        console.log('here')\n        return (\n            <div>\n                <div className=\"group-page\">\n                  <Subgrouphome mainboxfilerid={mainboxfilerid} groupapi={groupapi} grouptype={grouptype} subgroupid={subgroupid} groupid={groupid} groupname={groupname}/>\n                </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default Subgroup","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport firebase from '../../../../ServerSide/basefile';\nimport Loadingblue from '../../../../Comps/Loadingblue';\nimport axios from 'axios';\n\n\nconst Posts = ({visible, grouptype, groupid, wallpostid }) => {\n //states\n    const [postres, setPostRes] = useState({\n        postres: []\n    })\n    const [loading, setLoading] = useState({\n        loading: true\n    })\n    const [modalpost, setModalPost] = useState({\n        modalpost: false\n    })\n    const [currentpost, setCurrentPost] = useState({\n        currentpost: {}\n    })\n\n   const componentMounted = useRef(null);\n\n       useEffect(() => {\n        componentMounted.current = true;\n           if (visible === true) {\n            if (componentMounted.current) {\n              axios.get('https://vincobackend.herokuapp.com/wallpostapi/getposts/'+ grouptype + '/' + groupid + '/' + wallpostid)\n              .then((bod) => {\n               const newbod = bod.data.sort((a, b) => new Date(a.date) - new Date(b.date));\n                setPostRes({\n                  postres: newbod.reverse()\n                })\n                setLoading({\n                  loading: false\n                })\n              }).catch((error) => {\n                  console.log(error);\n              })\n            }\n           }\n\n           return () => {componentMounted.current = false}\n       }, [visible, groupid, grouptype, wallpostid])\n\n       const ModalPost = ({showmodalpost, post}) => {\n        const [show , setShow] = useState({\n            show: false\n        }) \n        const [response, setResponse] = useState({\n            response: []\n        })\n        const [commentinput, setCommentInput] = useState({\n            commentinput: ''\n        })\n     \n        const componentMounted = useRef(null);\n     \n        const fetchComments = useCallback(async () => {\n         await axios.get('https://vincobackend.herokuapp.com/wallpostapi/getcomments/' + grouptype + '/' + groupid + '/' + wallpostid+ '/' + post.postid)\n         .then((body) => {\n             const newbod = body.data.sort((a, b) => new Date(a.date) - new Date(b.date));\n              setResponse({\n               response: newbod\n              })\n         }).catch((error) => {\n             console.log(error);\n         })\n       }, [post.postid])\n     \n        useEffect(() => {\n         componentMounted.current = true;\n         if (componentMounted.current) {\n             fetchComments();\n         }\n         return () => {componentMounted.current = false}\n        }, [fetchComments])\n     \n         const ShowCommentOuptput = () => {\n                 if (response.response.length > 0) {\n                     return (\n                         <div>\n                         {\n                             response.response.map(item => (\n                                 <div key={response.response.indexOf(item)}>\n                                     <div className=\"comment-container\">\n                                     <h6 className={\"comment-\" + post.posttype +  \" d-inline-flex p-2\"}>{item.displayname + ': ' + item.message}</h6>\n                                     </div>\n                                 </div>\n                             ))\n                         }\n                         </div>\n                     )\n                 } else {\n                     return (\n                         <div>\n                         <div className=\"comment-container\">\n                             <h6 className=\"text-center\">THERE ARE CURRENTLY NO COMMENTS</h6>\n                         </div>\n                         </div>\n                     )\n                 }\n             } \n         \n            if (showmodalpost === true) {\n             return (\n                 <div>\n                  <div className=\"modal-edu\">\n                         <div className=\"container\">\n                          <div className=\"modal-padding\">\n                           <div className={\"modal-container-\" + post.posttype}>\n                            <div className=\"row\">\n                             <div className=\"col-md-12\">\n                              <span className={\"closebtn-\" + post.posttype} onClick={() => {\n                                  setModalPost({\n                                      modalpost: false\n                                  })\n                              }}>&times;</span>\n                             </div>\n                            </div>\n                             <div className=\"float-right\">\n                              <h6>{post.displaydate}</h6>\n                             </div>\n                             <h6>{post.displayname}</h6>\n                             <div className=\"title-padding\">\n                             <h4>{post.message}</h4>\n                             </div>\n                             <div className=\"button-small-padding\">\n                             <button className={\"plain-btn-\" + post.posttype} onClick={() => {\n                                 if(show.show === false) {\n                                     setShow({\n                                         show: true\n                                     })\n                                 } else if (show.show === true) {\n                                     setShow({\n                                         show: false\n                                     })\n                                 }\n                             }}>Comments</button>\n                             </div>\n                             <div className=\"input-comment-container\">\n                             <input type=\"text\" className={\"input-comment-\" + post.posttype} name=\"commentinput\" onChange={(e) => {\n                                 setCommentInput({\n                                     commentinput: e.target.value\n                                 })\n                             }} onKeyDown={(e) => {\n                                 if (e.keyCode === 13) {\n                                     const commentdata = {\n                                         creator: firebase.auth().currentUser.uid,\n                                         displayname: firebase.auth().currentUser.displayName,\n                                         message: commentinput.commentinput,\n                                         date: new Date()\n                                     }\n                             \n                                     axios.post('/wallpostapi/comment/' + grouptype + '/' + groupid + '/' + wallpostid + '/' + post.postid , commentdata,{\n                                         headers: {\n                                         'Accept': 'application/json',\n                                         'Content-Type': 'application/json'\n                                         }, \n                                     })\n                                       .then((bod) => {\n                                         response.response.push(bod.data);\n                                         setResponse({\n                                             response: response.response\n                                         })\n                                     }).catch((error) => { \n                                         console.log(error);\n                                     })\n                                 }\n                             }} placeholder=\"Comment here...\"/>\n                         </div>\n                         <div className=\"comment-total-container\">\n                         <ShowCommentOuptput/>\n                         </div>\n                         </div>\n                          </div>\n                         </div>\n                   </div>\n               </div>\n             )\n            } else {\n                return null;\n            }\n     }\n   \n      const ReminderModal = () => {\n        const [reminderform, setReminderForm] = useState({\n            reminderform: false\n        })\n        const ReminderForm = ({reminderform}) => {\n            const [reminderdate, setReminderDate] = useState({\n                reminderdate: ''\n            })\n            const [remindertime, setReminderTime] = useState({\n                remindertime: ''\n            })\n            const [reminderpost, setReminderPost] = useState({\n                reminderpost: ''\n            })\n            if (reminderform === true) {\n                return (\n                    <div>\n                      <div className=\"modal-edu\">\n                        <div className=\"container\">\n                         <div className=\"modal-padding\">\n                          <div className=\"modal-container\">\n                            <span className=\"closebtndark\" onClick={() => {\n                                setReminderForm({\n                                    reminderform: false\n                                })\n                            }}>&times;</span>\n                            <h3>SET A REMINDER</h3>\n                            <div className=\"row\">\n                             <div className=\"col-md-6\">\n                             <div className=\"input-container\">\n                                <div className=\"group\">      \n                                <label>Set Reminder Date.</label>\n                                <input type=\"date\" className=\"input-regular\" name=\"reminderdate\" onChange={(e) => {\n                                    setReminderDate({\n                                     reminderdate: e.target.value\n                                    })\n                                }} required />\n                                </div>\n                             </div>\n                             </div>\n                             <div className=\"col-md-6\">\n                             <div className=\"input-container\">\n                                <div className=\"group\">      \n                                <label>Set Reminder Time.</label>\n                                <input type=\"time\" className=\"input-regular\" name=\"remindertime\" onChange={(e) => {\n                                    setReminderTime({\n                                     remindertime: e.target.value\n                                    })\n                                }} required />\n                                </div>\n                             </div>\n                             </div>\n                            </div>\n                            <div className=\"input-container\">\n                            <div className=\"group\">      \n                              <input type=\"text\" className=\"inputbar\" name=\"reminderpost\" onChange={(e) => {\n                                 setReminderPost({\n                                  reminderpost: e.target.value\n                                })\n                               }} required />\n                                <span className=\"highlight\"></span>\n                                <span className=\"bar\"></span>\n                                <label className=\"labelbar\">Reminder Post.</label>\n                             </div>\n                            </div>\n                            <div className=\"button-padding\">\n                               <button className=\"button-submit-blue\" onClick={() => {\n                                const timedisplay = (time) => {\n                                    let timesplit = time.split(':');\n                                    let hours;\n                                    \n                                    hours = timesplit[0];\n                                   let minutes = timesplit[1];\n                                   let meridian = null;\n                                    if (hours > 12) {\n                                        meridian = 'PM';\n                                        hours -= 12;\n                                    } else if (hours < 12) {\n                                        meridian = 'AM'\n                                        if (hours === 0) {\n                                            hours = 12\n                                        }\n                                    } else { \n                                        meridian = 'PM'\n                                    }\n    \n                                    return hours + ':' + minutes + ' ' + meridian \n                                }\n    \n                                const getMonthAndDate = (date) => {\n                                    const montharray = [{\n                                        month: 'Jan',\n                                        index: 1\n                                    }, {\n                                        month: 'Feb',\n                                        index: 2\n                                    }, {\n                                        month: 'Mar',\n                                        index: 3\n                                    }, {\n                                        month: 'Apr',\n                                        index: 4\n                                    }, {\n                                        month: 'May',\n                                        index: 5\n                                    }, {\n                                        month: 'Jun',\n                                        index: 6\n                                    }, {\n                                        month: 'Jul',\n                                        index: 7\n                                    }, {\n                                        month: 'Aug',\n                                        index: 8\n                                    }, {\n                                        month: 'Sep',\n                                        index: 9\n                                    }, {\n                                        month: 'Oct',\n                                        index: 10\n                                    }, {\n                                        month: 'Nov',\n                                        index: 11\n                                    }, {\n                                        month: 'Dec',\n                                        index: 12\n                                    }]\n                                    const month = date.substring(5,7);\n                                    let monthtitle;\n                                    for (let i = 0; i < montharray.length; i++) {\n                                        if (montharray[i].index === Number(month)) {\n                                            return montharray[i].month + ' ' + date.substring(8) \n                                        }\n                                    }\n    \n                                    return monthtitle + ' ' + date.substring(8)\n                                }\n    \n                                   const data = {\n                                       reminderpost: reminderpost.reminderpost,\n                                       postremindertime: getMonthAndDate(reminderdate.reminderdate) + ' ' + timedisplay(this.state.remindertime) ,\n                                       creator: firebase.auth().currentUser.uid,\n                                       backenddate: reminderdate.reminderdate + ' ' + remindertime.remindertime,\n                                       timezone: Intl.DateTimeFormat().resolvedOptions().timeZone\n                                   }\n            \n                                   \n                                   axios.put('https://vincobackend.herokuapp.com/api/reminders/makeremindermain/' + grouptype + '/' + groupid , data,{\n                                       headers: {\n                                        'Accept': 'application/json',\n                                        'Content-Type': 'application/json'\n                                       },\n                                   }).then(() => {\n                                       setReminderForm({\n                                           reminderform: false\n                                       })\n                                   }).catch((error) => {\n                                       console.log(error);\n                                   })\n                               }}>MAKE REMINDER</button>\n                            </div>\n                          </div>\n                         </div>\n                        </div>\n                      </div>\n                    </div>\n                )\n            } else {\n                return null;\n            }\n        }\n\n        return (\n            <div>\n            <div className=\"button-padding\">\n             <button className=\"button-submit-blue\" onClick={() => {\n               setReminderForm({\n                   reminderform: true\n               })\n             }}>CREATE A REMINDER</button>\n            <ReminderForm reminderform={reminderform.reminderform}/>\n            </div>\n            </div>\n        )\n   }\n\n  const ShowPosts = () => {\n     if (postres.postres.length > 0) {\n        return(\n            <div>\n              <div className=\"posts-container\">\n                 {\n                     postres.postres.map(item => (\n                         <div key={postres.postres.indexOf(item)}>\n                           <div className=\"post-spacing\">\n                             <div className=\"slightshadow\" onClick={() => {\n                                 setCurrentPost({\n                                     currentpost: item\n                                 })\n                                 setModalPost({\n                                     modalpost: true\n                                 })\n                             }}>\n                             <div className={\"post-heading-\" + item.posttype}>\n                              <div className=\"row\">\n                               <div className=\"col-md-10\">\n                                <h6>{item.displayname + ' / ' + item.usertitle}</h6>\n                               </div>\n                               <div className=\"col-md-2\">\n                                 <h6>{item.displaydate}</h6>\n                               </div>\n                              </div>\n                             </div>\n                             <div className={\"post-\" + item.posttype}>  \n                                 <h4>{item.message}</h4>\n                             </div>\n                             </div>\n                           </div>\n                         </div>\n                     ))\n                 }\n              </div>\n            </div>\n        )\n     } else {\n         return (\n             <div>\n                 <div className=\"title-padding\">\n                 <h1 className=\"text-center\">THERE ARE NOT POSTS SO FAR</h1>\n                 </div>\n             </div>\n         )\n     }\n   }\n           \n\n  const PostModal = () => {\n      const [postshow, setPostShow] = useState({\n          postshow: false\n      })\n      const PostForm = ({postshow}) => {\n          const [posttitle, setPostTitle] = useState({\n            postitle: 'STATEMENT'\n          })\n          const [currentpost, setCurrentPost] = useState({\n              currentpost: 'statement'\n          })\n          const [post, setPost] = useState({\n            post: ''\n          })\n\n        if (postshow === true) {\n            return (\n                <div>\n                    <div className=\"modal-edu\">\n                     <div className=\"container\">\n                      <div className=\"modal-padding\">\n                         <div className=\"modal-header-white\">\n                           <span className=\"closebtndark\" onClick={() => {\n                               setPostShow({\n                                   postshow: false\n                               })\n                           }}>&times;</span>\n                           <h3>CREATE A POST</h3>\n                         </div>\n                         <div className=\"modal-container\">\n                         <div className=\"float-right\">\n                           <div className=\"row\">\n                           <div className=\"col-xs-6\">\n                             <div className=\"button-total-padding\">\n                             <button className=\"button-submit\" onClick={() => {\n                                 setPostTitle({\n                                     postitle: 'QUESTION'\n                                 })\n                                 setCurrentPost({\n                                     currentpost: 'question'\n                                 })\n                             }}>QUESTION</button>\n                             </div>\n                           </div>\n                           <div className=\"col-xs-6\">\n                            <div className=\"button-total-padding\">\n                            <button className=\"button-submit-blue\" onClick={() => {\n                                setPostTitle({\n                                    postitle: 'STATEMENT'\n                                })\n                                setCurrentPost({\n                                    currentpost: 'statement'\n                                })\n                            }}>STATEMENT</button>\n                            </div>\n                           </div>\n                           </div>\n                         </div>\n                         <h3>{posttitle.postitle}</h3>\n                         <div className=\"input-container\">\n                            <div className=\"group\">      \n                                <input type=\"text\" className=\"inputbar\" name=\"post\" onChange={(e) => {\n                                    setPost({\n                                    post: e.target.value\n                                    })\n                                }} onKeyDown={(e) => {\n                                    if (e.keyCode === 13) {\n                                        const date = new Date();\n                                        const data = {\n                                            creator: firebase.auth().currentUser.uid,\n                                            displayname: firebase.auth().currentUser.displayName,\n                                            message: post.post,\n                                            date: new Date(),\n                                            posttype: currentpost.currentpost,\n                                            displaydate: date.getMonth().toString() + '/' + date.getDate() + '/' + date.getFullYear(),\n                                        }\n                                \n                                        axios.post('https://vincobackend.herokuapp.com/wallpostapi/makepost/'+ grouptype + '/' + groupid + '/' + wallpostid, data,{\n                                            headers: {\n                                                'Accept': 'application/json',\n                                                'Content-Type': 'application/json'\n                                            },\n                                        })\n                                        .then((body) => {\n                                            postres.postres.push(body.data);\n                                            setPostRes({\n                                                postres: postres.postres\n                                            })\n\n                                        }).catch((error) => {\n                                            console.log(error);\n                                        })\n                                    }\n                                }} required />\n                                <span className=\"highlight\"></span>\n                                <span className=\"bar\"></span>\n                                <label className=\"labelbar\">Ask a question to your group or make a statment.</label>\n                            </div>\n                         </div>\n                         <div className=\"input-container\">\n                          <div className={\"post-heading-\" + currentpost.currentpost}>\n                            <div className=\"row\">\n                             <div className=\"col-md-10\">\n                              <h6>{firebase.auth().currentUser.displayName}</h6>\n                             </div>\n                             <div>\n                              <h6>{new Date().getMonth().toString() + '/' + new Date().getDate() + '/' + new Date().getFullYear()}</h6> \n                             </div>\n                            </div>\n                            <div className={\"post-\" + currentpost.currentpost}>\n                              <h4>{post.post}</h4>\n                            </div>\n                          </div>\n                         </div>\n                         </div>\n                      </div>\n                     </div>\n                    </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n      }\n\n      return (\n        <div>\n            <div className=\"button-padding\">\n             <button className=\"button-submit-blue\" onClick={() => {\n               setPostShow({\n                   postshow: true\n               })\n             }}>CREATE A POST</button>\n            <PostForm postshow={postshow.postshow}/>\n            </div>\n        </div>\n      )\n\n    }\n    \n    if(visible === true) {\n        return (\n            <div>\n             <div className=\"mainchat-component\">\n              <div className=\"row\">\n                <div className=\"col-md-3\">\n                <h2>POSTS</h2>\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"sub-comp\">\n                        <div className=\"d-flex justify-content-center\">\n                        <div className=\"question-box\"></div> \n                        </div>\n                         <h6 className=\"text-center\">QUESTIONS</h6>\n                        </div>\n                        <div className=\"sub-comp\">\n                        <div className=\"d-flex justify-content-center\">\n                        <div className=\"statement-box\"></div> \n                        </div>\n                        <h6 className=\"text-center\">STATEMENTS</h6>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-3\">\n                 <div className=\"row\">\n                  <div className=\"col-md-6\">\n                  <PostModal/>\n                  </div>\n                  <div className=\"col-md-6\">\n                  <ReminderModal/>\n                  </div>\n                 </div>\n                </div>\n              </div>\n              <ShowPosts/>\n              <Loadingblue loading={loading.loading}/>\n             </div>\n             <ModalPost showmodalpost={modalpost.modalpost} post={currentpost.currentpost}/>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default Posts;","import React, {useState , useEffect, useRef, useCallback}from 'react';\nimport Authnav from '../Authnav';\nimport BoxFiler from './BoxFiler/BoxFiler';\nimport ConnectionsHome from './Connections/Connectionhome';\nimport firebase from '../../../ServerSide/basefile';\nimport FilterUsers from '../../../ServerSide/Filters/FilterUsersAdd';\nimport Subgroup from './Subgroups/Subgrouphome';\nimport Posts from './Posts/Posts';\nimport axios from 'axios';\nconst Group = (props) => {\n const [groupres, setGroupRes] = useState({\n    groupres: []\n })\n const [boxfiler , setBoxFiler] = useState({\n   boxfiler: false\n })\n const [wallpost , setWallPost] = useState({\n   wallpost: true\n})\nconst [groupconnectivity , setGroupConnectivity] = useState({\n   groupconnectivity: false\n})\nconst [subcomp , setSubComp] = useState({\n   subcomp: false\n})\nconst [userdetails , setUsersDetails] = useState({\n  userdetails: []\n})\nconst [groupdetails , setGroupDetails] = useState({\n   groupdetails: false\n})\nconst [leavegroupmodal , setLeaveGroupModal] = useState({\n   leavegroupmodal: false\n})\nconst [show , setShow] = useState({\n   show: 'hide'\n})\nconst [addusersmodal , setAddUsersModal] = useState({\n   addusersmodal: false\n})\nconst [subgroups , setSubGroups] = useState({\n   subgroups: false\n})\n      \n    const componentMounted = useRef(null);\n    useEffect(() => {\n      componentMounted.current = true;\n      const {groupapi} = props.match.params;\n        setTimeout(() => {\n        if (componentMounted.current) {\n          axios.get('https://vincobackend.herokuapp.com/api/group/checkusergroup/' + groupapi + '/' + firebase.auth().currentUser.uid)\n         .then((bod) => {\n           if (bod.data.userresponse === true) {\n             axios.get('https://vincobackend.herokuapp.com/api/group/getgroupdetails/' + groupapi + '/' + firebase.auth().currentUser.uid)\n             .then((bod) => {\n                 setGroupRes({\n                     groupres: bod.data\n                 })\n             }).then(() => {\n               if (groupres.groupres.grouptype === \"ORGANIZATIONALGROUPS\") {\n                 setSubGroups({\n                   subgroups: true\n                 })\n               } else {\n                 setSubGroups({\n                   subgroups: false\n                 })\n               }\n             }).catch((error) => {\n                 console.log(error)\n             })\n           } else if (bod.data.userresponse === false) {\n             props.history.push('/dash');\n           }\n          }).catch((error) => {\n            console.log(error);\n          })\n  \n\n          axios.get('https://vincobackend.herokuapp.com/api/group/getusers/' + groupres.groupres.grouptype + '/' + groupres.groupres.groupid)\n          .then((bod) => {\n            setUsersDetails({\n              userdetails: bod.data\n            })\n          }).catch((error) => {\n            console.log(error);\n          })\n          }\n        }, 500);\n      return () => {componentMounted.current = false}  \n    }, [groupres.groupres.groupid ,groupres.groupres.grouptype ,props.history , props.match.params])\n\n\n   const Addusers = ({addusersmodal}) => {\n      const data = {\n        clientid: groupres.groupres.clientid,\n        groupapi: groupres.groupres.groupapi,\n        groupdescription: groupres.groupres.groupdescription,\n        groupid: groupres.groupres.groupid,\n        groupname: groupres.groupres.groupname\n      }\n      if (addusersmodal === true) {\n        return (\n          <div>\n            <div className=\"modal-edu-white\">\n             <div className=\"container\">\n              <div className=\"modal-padding\">\n               <div className=\"modal-container\">\n                <span className=\"closebtndark\" onClick={() => {\n                  setAddUsersModal({\n                    addusersmodal: false\n                  })\n                }}>&times;</span>\n                <h3>{\"Add users to \" + groupres.groupres.groupname}</h3>\n                <FilterUsers cardstyle=\"suggest-card\" buttonstyle=\"button-submit\" data={data} api={groupres.groupres.groupapi}/>\n               </div>\n              </div>\n             </div>\n            </div>\n          </div>\n        )\n      } else {\n        return null;\n      }\n    }\n\n    const AdminPortal = ({adminportal}) => {\n      const [showAdminPage , setAdminPage] = useState({\n        adminpage: false\n      })\n      const [showAdminOptions, setAdminOptions] = useState({\n        adminoptions: true\n      })\n      const [showAdminTitle, setAdminTitles] = useState({\n        admintitle: false\n      })\n      const [nonadminusers, setNonAdminUsers] = useState({\n        nonadminusers: []\n      })\n      const [titleadminusers, setTitleAdminUsers] = useState({\n        titleadminusers: []\n      })\n    \n      const componentMounted = useRef(null);\n    \n      useEffect(() => {\n        componentMounted.current = true;\n        setTimeout(() => {\n          if (componentMounted.current) {\n            if (adminportal !== true) {\n              axios.get('https://vincobackend.herokuapp.com/api/group/getportalusers/' + groupres.groupres.groupid)\n              .then((bod) => {\n                setNonAdminUsers({\n                  nonadminusers: bod.data\n                })\n              }).catch((error) => {\n                console.log(error);\n              })\n    \n              axios.get('https://vincobackend.herokuapp.com/api/group/getusers/' + groupres.groupres.grouptype + '/' + groupres.groupres.groupid)\n              .then((body) => {\n                setTitleAdminUsers({\n                  titleadminusers: body.data\n                })\n              }).catch((error) => {\n                console.log(error);\n              })\n             }\n          }\n        }, 400);\n    \n        return () => { componentMounted.current = false }\n      }, [adminportal])\n    \n       const OutputOptionsUser = ({adminoptions}) => {\n         if (adminoptions === true) {\n            if (nonadminusers.nonadminusers.length > 0) {\n              return (\n              <div>\n                    {\n                       nonadminusers.nonadminusers.map((item) => (\n                          <div key={nonadminusers.nonadminusers.indexOf(item)}>\n                            <div className=\"user-container\">\n                            <div className=\"row\">\n                              <div className=\"col-md-8\">\n                              <h4>{item.firstname}</h4>\n                              </div>\n                              <div className=\"col-md-4\">\n                              <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                  <button className=\"button-submit\" onClick={() => {\n                                    axios.post('https://vincobackend.herokuapp.com/api/group/makeadmin/' + groupres.groupres.groupid + '/' + item.useruid, {\n                                      method: 'POST'\n                                    })\n                                    .then((body) => {\n                                      console.log('user has been made admin')\n                                      setNonAdminUsers({\n                                        nonadminusers: body.data\n                                      })\n                                    }).catch((error) => {\n                                      console.log(error);\n                                    })\n                                  }}>MAKE ADMIN</button>\n                                </div>\n                                <div className=\"col-md-6\">\n                                  <button className=\"button-red\" onClick={() => {\n                                    axios.delete('https://vincobackend.herokuapp.com/api/group/removeuser/' + groupres.groupres.groupid + '/' + item.useruid)\n                                    .then(() => {\n                                      axios.get('https://vincobackend.herokuapp.com/api/group/getportalusers/' + groupres.groupres.groupid)\n                                      .then((bod) => {\n                                        console.log(bod);\n                                        setNonAdminUsers({\n                                          nonadminusers: bod.data\n                                        })\n                                      }).catch((error) => {\n                                        console.log(error);\n                                      })\n                                    }).catch((error) => {\n                                      console.log(error);\n                                    })\n                                  }}>REMOVE</button>\n                                </div>\n                              </div>\n                              </div>\n                            </div>\n                            </div>\n                          </div>\n                        ))\n                      }        \n              </div>\n              )\n            } else {\n              return (\n              <div>\n                  <h2 className=\"text-center\">EVERYONE IS AN ADMIN</h2>\n              </div>\n              )\n            }\n         } else {\n           return null;\n         }\n       }\n    \n       const OutputTitleUsers = ({outputtitle}) => {\n        if (outputtitle === true) {\n          if (titleadminusers.titleadminusers.length > 0) {\n            return (\n              <div>\n                {\n                  titleadminusers.titleadminusers.map((item) => (\n                    <div key={titleadminusers.titleadminusers.indexOf(item)}>\n                      <div className=\"user-container-blue\">\n                        <div className=\"row\">\n                         <div className=\"col-md-8\">\n                          <h6>{\"TITLE: \" + item.title}</h6>\n                          <h4>{item.firstname + ' ' + item.lastname}</h4>\n                         </div>\n                         <div className=\"col-md-4\">\n                          <div className=\"input-container\">\n                           <input type=\"text\" className=\"input-regular-white\" placeholder=\"Give the user title\" onKeyDown={(e) => {\n                            if (e.keyCode === 13) {\n                              axios.put('https://vincobackend.herokuapp.com/api/group/giveusertitle/' + groupres.groupres.grouptype + '/' + groupres.groupres.groupid  + '/' + item.useruid , e.target.value)\n                              .then(() => {\n                                axios.get('https://vincobackend.herokuapp.com/api/group/getusers/' + groupres.groupres.grouptype + '/' + groupres.groupres.groupid)\n                                .then((body) => {\n                                  setTitleAdminUsers({\n                                    titleadminusers: body.data\n                                  })\n                                }).catch((error) => {\n                                  console.log(error);\n                                })\n                              }).catch((error) => {\n                                console.log(error);\n                              })\n                            }\n                           }} />\n                          </div>\n                         </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                }\n              </div>\n            )\n          } else {\n            return (\n              <div>\n                <h3 className=\"text-center\">THERE ARE NO USERS</h3>\n              </div>\n            )\n          }\n        } else {\n          return null;\n        }\n       }\n    \n    \n       const AdminPage = ({adminpage}) => {\n         if (adminpage === true) {\n           return (\n            <div className=\"modal-edu-white\">\n            <div className=\"container\">\n             <div className=\"modal-padding\">\n              <div className=\"modal-container\">\n              <span className=\"closebtndark\" onClick={() => {\n                  setAdminPage({\n                    adminpage: false\n                  })\n                }}>&times;</span>\n                <h3>ADMIN PORTAL</h3>\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                  <div className=\"float-left\">\n                    <div className=\"row\">\n                      <div className=\"col-md-6\">\n                      <div className=\"button-padding\">\n                      <button className=\"button-submit\" onClick={() => {\n                        setAdminOptions({\n                          adminoptions: true\n                        })\n                        setAdminTitles({\n                          admintitle: false\n                        })\n                      }}>OPTIONS</button>\n                    </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                    <div className=\"button-padding\">\n                      <button className=\"button-submit-blue\" onClick={() => {\n                        setAdminTitles({\n                          admintitle: true\n                        })\n                        setAdminOptions({\n                          adminoptions: false\n                        })\n                      }}>TITLES</button>\n                    </div>\n                    </div>\n                    </div>\n                 </div>\n                  </div>\n                </div>\n                <div className=\"input-container\">\n                  <OutputOptionsUser adminoptions={showAdminOptions.adminoptions}/>\n                  <OutputTitleUsers outputtitle={showAdminTitle.admintitle}/>\n                </div>\n              </div>\n             </div>\n            </div>\n          </div>\n           )\n         } else {\n           return null;\n         }\n       }\n    \n    \n      if (adminportal === true) {\n        return (\n          <div>\n            <div className=\"button-padding\">\n               <button className=\"button-submit-blue\" onClick={() => {\n                  setAdminPage({\n                       adminpage: true\n                    })\n               }}>ADMIN PORTAL</button>\n            </div>\n            <AdminPage adminpage={showAdminPage.adminpage}/>\n          </div>\n        )\n      } else {\n        return null;\n      }\n    }\n\n  const LeaveGroupModal = ({leavegroupmodal}) => {\n      if (leavegroupmodal === true) {\n        return (\n          <div>\n            <div className=\"modal-edu-red\">\n              <div className=\"container\">\n              <div className=\"modal-padding\">\n                <span className=\"closebtnwhite\" onClick={() => {\n                  setLeaveGroupModal({\n                    leavegroupmodal: false\n                  })\n                }}>&times;</span>\n                <div className=\"title-padding\">\n                  <h2>{\"YOU ARE ABOUT TO LEAVE \" + groupres.groupres.groupname}</h2>\n                </div>\n                <h5>Please be advised that you are about to leave this group, you are able to re-join by just requesting to be added but we want to make sure that this is what you want</h5>\n              <div className=\"input-container-major\">\n              <div className=\"group\">      \n                     <input type=\"text\" className=\"inputbar-white\" onChange={(e) => {\n                          if(e.target.value === firebase.auth().currentUser.email) {\n                            setShow({\n                              show: 'show'\n                            })\n                          }\n                    }} required />\n                     <span className=\"highlight-white\"></span>\n                     <span className=\"bar-white\"></span>\n                    <label className=\"labelbar-white\">PLEASE TYPE YOUR EMAIL TO CONFIRM</label>\n                  </div>\n              </div>\n              <div className=\"input-container\">\n                <div className=\"float-right\">\n                  <div className={show.show}>\n                  <button className=\"button-white-red\" onClick={() => {\n                    axios.delete('https://vincobackend.herokuapp.com/api/group/leavegroup/' + groupres.groupres.groupapi + '/' + groupres.groupres.groupid + '/' + firebase.auth().currentUser.uid , {\n                      headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                      }\n                    }).then(() => {\n                      props.history.push('/dash')\n                    }).catch((error) => {\n                      console.log(error);\n                    })\n                  }}><h4>LEAVE</h4></button>\n                  </div>\n                </div>\n              </div>\n              </div>\n              </div>\n            </div>\n          </div>\n        )\n      } else {\n        return null;\n      }\n    }\n\n   const GroupDetails = ({groupdetails}) => {\n    const [adminuser , setAdminUser] = useState({\n      adminuser: false\n    })\n\n    const subComp = useRef(null);\n\n    const fetchAdminStatus = useCallback(() => {\n      if (groupdetails === true) {\n        if (subComp.current) {\n          if (groupres.groupres.grouptype !== undefined){\n            axios.get('https://vincobackend.herokuapp.com/api/group/checkuseradmin/'+ groupres.groupres.groupid + '/' + firebase.auth().currentUser.uid)\n            .then((bod) => {\n              if (bod.data === true) {\n                setAdminUser({\n                  adminuser: true\n                })\n              } else {\n                setAdminUser({\n                  adminuser: false\n                })\n              }\n            }).catch((error) => {\n              console.log(error);\n            })\n          }\n        }\n      }\n\n      return () => {subComp.current = false}\n\n    }, [groupdetails])\n\n    useEffect(() => {\n      subComp.current = true\n      setTimeout(() => {\n        fetchAdminStatus()\n      }, 500);\n      return () => {subComp.current = false}\n    }, [fetchAdminStatus])\n\n      if (groupdetails === true) {\n        return (\n          <div>\n            <div className=\"modal-edu\">\n              <div className=\"container\">\n               <div className=\"modal-padding\">\n                <div className=\"modal-header-blue\">\n                  <span className=\"closebtnwhite\" onClick={() => {\n                    setGroupDetails({\n                      groupdetails: false\n                    })\n                  }}>&times;</span>\n                  <h2>{groupres.groupres.groupname + ' Details'}</h2>\n                </div>\n                <div className=\"modal-container\">\n                  <div className=\"float-right\">\n                    <h6>{groupres.groupres.users.length + ' users'}</h6>\n                    <div className=\"button-padding\">\n                    <button className=\"button-submit\" onClick={() => {\n                      setAddUsersModal({\n                        addusersmodal: true\n                      })\n                    }}>ADD USERS</button>\n                    </div>\n                    <AdminPortal adminportal={adminuser.adminuser} groupid={groupres.groupres.groupid} grouptype={groupres.groupres.grouptype}/>\n                  </div>\n                  <h3>GROUP MEMBERS</h3>\n                  <div className=\"row\">\n                    {\n                      userdetails.userdetails.map(item => (\n                        <div key={userdetails.userdetails.indexOf(item)}>\n                          <div className=\"user-group-name-container\">\n                            <div className=\"user-group-name  d-inline-flex p-2\">\n                               <h6>{item.firstname + ' ' + item.lastname + ' / ' + item.title}</h6>\n                            </div>\n                          </div>\n                        </div>\n                      ))\n                    }\n                  </div>\n                  <div className=\"button-padding\">\n                    <button className=\"button-red\" onClick={() => {\n                      setLeaveGroupModal({\n                        leavegroupmodal: true\n                      })\n                    }}>LEAVE GROUP</button>\n                  </div>\n                </div>\n               </div>\n              </div>\n            </div>\n          </div>\n        )\n      } else {  \n        return null;\n      }\n    }\n\n    /*\n                  <MainChatShow\n                mainchatshow={mainchat.mainchat}\n                groupname={groupres.groupres.groupname}\n                mainchatid={groupres.groupres.mainchatid}\n                groupid={groupres.groupres.groupid}\n                grouptype={groupres.groupres.typeofgroup}\n                />\n    */\n\n   const SubGroupNav = ({subgroups}) => {\n      if (subgroups === true) {\n        return (\n          <div>\n             <p className=\"main-group-nav\" onClick={() => {\n             setBoxFiler({\n               boxfiler: false\n             })\n             setWallPost({\n               wallpost: false\n             })\n             setGroupConnectivity({\n               groupconnectivity: false\n             })\n             setSubComp({\n               subcomp: true\n             })\n            }}>SUBGROUPS</p>\n          </div>\n        )\n      } else {\n        return null;\n      }\n    }\n\n       return (\n            <div>\n             <Authnav/>\n             <div className=\"page\">\n               <div className=\"group-title-page\">\n                <h3>{groupres.groupres.groupname}</h3>\n               </div>\n               <div className=\"group-navigation\">\n                 <div className=\"group-component-padding\">\n                 <div className=\"group-main-component\">\n                 <p className=\"main-group-nav\" onClick={() => {\n                        setBoxFiler({\n                          boxfiler: false\n                        })\n                        setWallPost({\n                          wallpost: true\n                        })\n                        setGroupConnectivity({\n                          groupconnectivity: false\n                        })\n                        setSubComp({\n                          subcomp: false\n                        })\n                    }}>POSTS</p>\n                 </div>\n                 <div className=\"group-main-component\">\n                 <p className=\"main-group-nav\" onClick={() => {\n                      setBoxFiler({\n                        boxfiler: true\n                      })\n                      setWallPost({\n                        wallpost: false\n                      })\n                      setGroupConnectivity({\n                        groupconnectivity: false\n                      })\n                      setSubComp({\n                        subcomp: false\n                      })\n                    }}>BOXFILER</p>\n                 </div>\n                 <div className=\"group-main-component\">\n                 <p className=\"main-group-nav\" onClick={() => {\n                      setBoxFiler({\n                        boxfiler: false\n                      })\n                      setWallPost({\n                        wallpost: false\n                      })\n                      setGroupConnectivity({\n                        groupconnectivity: true\n                      })\n                      setSubComp({\n                        subcomp: false\n                      })\n                    }}>CONNECTIONS</p>\n                 </div>\n                 <div className=\"group-main-component\">\n                 <SubGroupNav subgroups={subgroups.subgroups}/>\n                 </div>\n                 <div className=\"group-main-component\">\n                 <p className=\"main-group-nav\" onClick={() => {\n                      setGroupDetails({\n                        groupdetails: true\n                      })\n                    }}>DETAILS</p>\n                 </div>\n                 </div>\n              </div>\n              <div className=\"grouppage\">\n                <BoxFiler \n                grouptype={groupres.groupres.typeofgroup} \n                groupapi={props.match.params.groupapi} \n                groupname={groupres.groupres.groupname}\n                groupid={groupres.groupres.groupid} \n                boxfiler={boxfiler.boxfiler} \n                boxfilerid={groupres.groupres.boxfilerid} />\n                <Posts \n                grouptype={groupres.groupres.grouptype} \n                groupid={groupres.groupres.groupid} \n                wallpostid={groupres.groupres.wallpostid} \n                visible={wallpost.wallpost}\n                />\n                <ConnectionsHome\n                connectionhome={groupconnectivity.groupconnectivity}\n                groupclientid={groupres.groupres.clientid}\n                groupname={groupres.groupres.groupname}\n                groupid={groupres.groupres.groupid}\n                />\n                <Subgroup\n                subgroupcomp={subcomp.subcomp}\n                groupname={groupres.groupres.groupname}\n                groupid={groupres.groupres.groupid}\n                subgroupid = {groupres.groupres.subgroupsid}\n                grouptype = {groupres.groupres.typeofgroup}\n                groupapi={groupres.groupres.groupapi}\n                mainboxfilerid={groupres.groupres.boxfilerid}\n                />\n              </div>\n             <GroupDetails groupdetails={groupdetails.groupdetails}/>\n             <LeaveGroupModal leavegroupmodal={leavegroupmodal.leavegroupmodal}/>\n             <Addusers addusersmodal={addusersmodal.addusersmodal}/>\n            </div>\n            </div>\n        )\n}\n\nexport default Group;","import React, {useState, useEffect, useRef} from 'react';\nimport Authnav from '../Auth/Authcomps/Authnav';\nimport firebase from '../ServerSide/basefile';\nimport axios from 'axios';\n\nconst Pendinggroups = (props) =>{\n    const [res, setRes] = useState({\n        res: []\n    })\n    const [showdetails, setShowDetails] = useState({\n        showdetails: false\n    })\n    const [dets, setDets] = useState({\n        dets: []\n    })\n\n    const componentMounted = useRef(null);\n\n    useEffect(() => {\n    componentMounted.current = true\n      if (componentMounted.current) {\n        axios.get('https://vincobackend.herokuapp.com/api/group/pendinggroups/' + firebase.auth().currentUser.uid)\n        .then((bod) => {\n            setRes({\n                res: bod.data\n            })\n        }).catch((error) => {\n            console.log(error);\n        })\n      }\n    }, [])\n    \n\n   const ShowDetails = ({showdetails , dets}) => {\n        if (showdetails === true) {\n            return (\n                <div>\n                    <div className=\"modal-edu\">\n                     <div className=\"container\">\n                      <div className=\"modal-padding\">\n                        <div className=\"modal-blue-container\">\n                         <span className=\"closebtnwhite\" onClick={() => {\n                             setShowDetails({\n                                 showdetails: false\n                             })\n                         }}>&times;</span>\n                         <div className=\"title-padding\">\n                          <h3>{dets.groupname}</h3>\n                          <h6>{\"Group ID: \" + dets.clientid}</h6>\n                         </div>\n                          <h6>{dets.groupdescription}</h6>\n                        </div>\n                      </div>\n                     </div>\n                    </div>\n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n\n   const PendingGroups = () => {\n       if (res.res.length > 0) {\n        return(\n            <div>\n              <div className=\"row\">\n                {\n                    res.res.map(item => (\n                        <div key={res.res.indexOf(item)}>\n                        <div className=\"group-spacing\">\n                        <div className=\"pending-group-card slightshadow\">\n                            <span className=\"details\" onClick={() => {\n                                setShowDetails({\n                                    showdetails: true\n                                })\n                                setDets({\n                                    dets: item\n                                })\n                            }}></span>\n                            <div className=\"pending-group-card-padding\">\n                            <h4 className=\"text-center\">{item.groupname}</h4>\n                            <div className=\"button-padding\">\n                            <button className=\"button-submit-lightblue\" onClick={() => {\n                                        axios.get('https://vincobackend.herokuapp.com/api/group/addtogroup/' + item.clientid + '/' + firebase.auth().currentUser.uid)\n                                        .then(() => {\n                                            props.history.push('/dash');\n                                        }).catch((error) => {\n                                            console.log(error)\n                                        })\n                                    \n                            }}>JOIN GROUP</button>\n                            </div>\n                            </div>\n                        </div>\n                        </div>\n                        </div>\n                    ))\n                }\n              </div>\n            </div>\n        )\n       } else {\n         return (\n             <div>\n                 <div className=\"no-pending\">\n                 <h1 className=\"text-center\">YOU DON'T HAVE ANY PENDING GROUP INVITATIONS</h1>\n                 </div>\n             </div>\n         )\n       }\n    }\n\n        return (\n            <div>\n             <Authnav/>\n              <div className=\"page\">\n                <div className=\"pending-groups-page\">\n                 <div className=\"container\">\n                  <h3>PENDING GROUPS</h3>\n                   <div className=\"group-padding\">\n                    <PendingGroups/>\n                   </div>\n                 </div>\n                </div>\n              </div>\n              <ShowDetails showdetails={showdetails.showdetails} dets={dets.dets}/>\n            </div>\n        )\n    \n}\n\nexport default Pendinggroups","import React from 'react';\nimport firebase from '../../../ServerSide/basefile';\nimport {generateId} from '../../../ServerSide/functions';\nimport axios from 'axios'\nclass SubPostsComments extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            commentsres: [],\n            comment: '',\n            showcomments: false\n        }\n    }\n\n    fetchComments = () => {\n        setTimeout(() => {\n          axios.get('https://vincobackend.herokuapp.com/api/subgroup/getpostcomments/' + this.props.grouptype + '/' + this.props.groupid + '/' + this.props.subid + '/' + this.props.subgroupid + '/' + this.props.subpostid + '/' + this.props.postid )\n          .then((body) => {\n              this.setState({\n                  commentsres: body.data\n              })\n          }).catch((error) => {\n              console.log(error);\n          })\n        }, 500);\n    }\n\n    componentDidMount() {\n        this.fetchComments();\n    }\n\n    Comments = ({showcomments}) => {\n        if (showcomments === true) {\n            if (this.state.commentsres.length > 0) { \n                return (\n                    <div>\n                        {this.state.commentsres.map((item) => (\n                            <div key={this.state.commentsres.indexOf(item)}>\n                             <div className=\"comment-container\">\n                               <h6 className=\"comment d-inline-flex p-2\">{item.displayname + ': ' + item.message}</h6>\n                             </div>\n                            </div>\n                        ))}\n                    </div>\n                )\n            } else {\n                return (\n                    <div>\n                     <h5 className=\"text-center\">THERE ARE NO COMMENTS</h5>\n                    </div>\n                )\n            }\n        } else {\n            return null;\n        }\n    }\n    \n    MakeComment = () => {\n        const data = {\n            date: new Date(),\n            message: this.state.comment,\n            displayname: firebase.auth().currentUser.displayName,\n            commentid: generateId(40),\n            creator: firebase.auth().currentUser.uid\n        }\n\n        axios.put('https://vincobackend.herokuapp.com/api/subgroup/postcommentonpost/' + this.props.grouptype + '/' + this.props.groupid + '/' + this.props.subid + '/' + this.props.subgroupid + '/' + this.props.subpostid + '/' + this.props.postid, data,{\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n        }).then(() => {\n            this.fetchComments();\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n\n\n    render() {\n        console.log(this.state);\n        return (\n            <div>\n              <div className=\"button-padding\">\n               <button className=\"plain-btn\" onClick={() => {\n                   if (this.state.showcomments === true) {\n                       this.setState({\n                           showcomments: false\n                       })\n                   } else if (this.state.showcomments === false) {\n                    this.setState({\n                        showcomments: true\n                    })\n                   }\n               }}>COMMENTS</button>\n              </div>\n              <this.Comments showcomments={this.state.showcomments}/>\n              <input type=\"text\" className=\"input-comment-sub\" name=\"comment\" placeholder=\"Comment here...\" onChange={(e) => {\n                  this.setState({\n                      [e.target.name]: e.target.value\n                  })\n              }} onKeyDown={(e) => {\n                 if (e.keyCode === 13) {\n                    this.MakeComment()\n                 }\n              }}/>\n            </div>\n        )\n    }\n}\n\nclass Subposts extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            subpostres: [],\n            createpostmodal: false,\n            subpostinput: '',\n            subinputfile: '',\n            maingroupfolder: false,\n            mainboxres: [],\n            fileurl: '',\n            filename: '',\n            postmodal: false,\n            currentpost: []\n        }\n    }\n\n    fetchSubPosts = () => {\n      setTimeout(() => {\n          axios.get('https://vincobackend.herokuapp.com/api/subgroup/getsubposts/' + this.props.grouptype + '/' + this.props.groupid + '/' + this.props.subid + '/' + this.props.subgroupid + '/' + this.props.subpostid)\n          .then((bod) => {\n              this.setState({\n                  subpostres: bod.data\n              })\n          }).catch((error) => {\n              console.log(error);\n          })\n      }, 500);\n    }\n\n    componentDidMount() {\n      this.fetchSubPosts();\n      setTimeout(() => {\n        axios.get('https://vincobackend.herokuapp.com/api/boxfiler/getfolders/' + this.props.grouptype + '/' + this.props.groupid + '/' + this.props.groupboxfilerid)\n        .then((bod) => {\n            this.setState({\n                mainboxres: bod.data\n            })\n        }).catch((error) => {\n            console.log(error);\n        })\n      }, 500);  \n    }\n\n    MainGroupFolderSelect = ({maingroupfolder}) => {\n        if (maingroupfolder === true) {\n            return (\n                <div>\n                 <div className=\"modal-edu\">\n                  <div className=\"container\">\n                   <div className=\"modal-padding\">\n                    <div className=\"modal-container\">\n                     <span className=\"closebtndark\" onClick={() => {\n                         this.setState({\n                             maingroupfolder: false\n                         })\n                     }} >&times;</span>\n                     <h3>{this.props.maingroupname}</h3>\n                     <div className=\"input-container\">\n                     <div>\n                        {\n                            this.state.mainboxres.map(item => (\n                                <div key={this.state.mainboxres.indexOf(item)}>\n                                <div className=\"folder-component-padding\">\n                                <div className=\"folder-output\" onClick={() => {\n                                    const foldername = document.getElementById(item.foldername);\n                                    if (foldername.classList.contains('hide') === true) {\n                                        foldername.classList.remove('hide');\n                                    } else {\n                                        foldername.classList.add('hide');\n                                    }\n                                }}>\n                                    <h6 className=\"folder-subheader\">{item.files.length + \" files\"}</h6>\n                                    <h4>{item.foldername}</h4>\n                                </div>\n                                <div id={item.foldername} className=\"file-components hide\">\n                                {\n                                    item.files.map(index => (\n                                        <div key={item.files.indexOf(index)}>\n                                            <div className=\"file-output\" onClick={() => {\n                                                firebase.storage().ref(this.props.groupid + '/' + this.props.groupboxfilerid + '/' + item.folderid + '/' + index.filename)\n                                                .getDownloadURL().then((url) => {\n                                                    var xhr = new XMLHttpRequest();\n                                                    xhr.responseType = 'blob';\n                                                    xhr.onload = (event) => {\n                                                        var blob = xhr.response;\n                                                        console.log(blob)\n                                                    };\n                                                    xhr.open('GET', url);\n                                                    xhr.send();\n                                                    this.setState({\n                                                        fileurl: url,\n                                                        filename: index.filename,\n                                                        maingroupfolder: false\n                                                    })\n                                                }).catch((error) => {\n                                                    console.log(error);\n                                                })\n                                            }}>\n                                                <h6>{index.filename}</h6>\n                                            </div>\n                                        </div>\n                                    ))\n                                }\n                                </div>\n                                </div>\n                                </div>\n                            ))\n                           }\n                        </div>\n                     </div>\n                    </div>\n                   </div>\n                  </div>\n                 </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n    CreatePostSub = ({createpostmodal}) => {\n        if (createpostmodal === true) {\n           return (\n               <div>\n                   <div className=\"modal-edu\">\n                    <div className=\"container\">\n                     <div className=\"modal-padding\">\n                     <div className=\"modal-container\">\n                      <span className=\"closebtndark\" onClick={() => {\n                          this.setState({\n                              createpostmodal: false\n                          })\n                      }}>&times;</span>\n                      <h3>CREATE POST</h3>\n                      <div className=\"input-container\">\n                        <div className=\"post-text-container slightshadow\">\n                            <textarea className=\"post-white-text-area\" placeholder=\"Make a post\" name=\"subpostinput\" onChange={(e) => {\n                            this.setState({\n                                [e.target.name]: e.target.value\n                            })\n                            }} />\n                            <div className=\"post-option-buttons-container\">\n                            <div className=\"row\">\n                            <div className=\"col-md-3\">\n                                <button className=\"plain-btn-statement\">ATTACH FILE</button>\n                            </div>\n                            <div className=\"col-md-3\">\n                                <div className=\"justify-content-center\">\n                                <button className=\"plain-btn-statement\">CHOOSE FILE FROM SUBFOLDER</button>\n                                </div>\n                            </div>\n                            <div className=\"col-md-3\">\n                                <div className=\"justify-content-center\">\n                                <button className=\"plain-btn-statement\" onClick={() => {\n                                    this.setState({\n                                        maingroupfolder: true\n                                    })\n                                }}>{`CHOOSE FILE FROM ${this.props.maingroupname}`}</button>\n                                </div>\n                            </div>\n                            <div className=\"col-md-3\">\n                            <button className=\"button-submit-blue\" onClick={() => {\n                               \n                                const data = {\n                                message: this.state.subpostinput,\n                                file: this.state.fileurl,\n                                postid: generateId(79),\n                                creator: firebase.auth().currentUser.uid,\n                                displayName: firebase.auth().currentUser.displayName,\n                                date: new Date().getMonth() + '/' + new Date().getDate() + '/' + new Date().getFullYear()  + ' ' + new Date().getHours() + ':' + new Date().getMinutes(),\n                                servertimestamp: new Date(),\n                                filename: this.state.filename\n                                }\n\n                                \n                                axios.put('https://vincobackend.herokuapp.com/api/subgroup/makepost/' + this.props.grouptype + '/' + this.props.groupid + '/' + this.props.subid + '/' + this.props.subgroupid + '/' + this.props.subpostid, data,{\n                                headers: {\n                                    'Accept': 'application/json',\n                                    'Content-Type': 'application/json'\n                                },\n                                }).then(() => {\n                                 this.fetchSubPosts();\n                                 this.setState({\n                                     createpostmodal: false\n                                 })\n                                }).catch((error) => {\n                                console.log(error);\n                                }) \n                               \n                            }}>POST</button>\n                            </div>\n                            </div>\n                            </div>\n                        </div>\n                        </div>\n                        <div className=\"show-post-container\">\n                            <h6>{firebase.auth().currentUser.displayName}</h6>\n                            <h6>{\"ATTACHED: \" + this.state.filename}</h6>\n                            <div className=\"input-container\">\n                            <h4>{this.state.subpostinput}</h4>\n                            </div>  \n                        </div>\n                     </div>\n                     </div>\n                    </div>\n                   </div>\n               </div>\n           )\n        } else {\n            return null;\n        }\n    }\n\n    Output = () => {\n        return (\n            <div>\n                {\n                    this.state.subpostres.map((item) => (\n                        <div key={this.state.subpostres.indexOf(item)}>\n                           <div className=\"post-spacing\">\n                             <div className=\"slightshadow\">\n                              <div className=\"sub-post\" onClick={() => {\n                                  this.setState({\n                                    postmodal: true,\n                                    currentpost: item\n                                  })\n                              }}>\n                              <div className=\"post-header\">\n                              <div className=\"row\">\n                               <div className=\"col-md-10\">\n                                <h6>{item.displayName}</h6>\n                               </div>\n                               <div className=\"col-md-2\">\n                                 <h6>{item.date}</h6>\n                               </div>\n                              </div>\n                             </div>\n                             <div className=\"post-message\">  \n                                <h4>{item.message}</h4>\n                             </div>\n                              </div>\n                             </div>\n                           </div>\n                        </div>\n                    ))\n                }\n            </div>\n        )\n    }\n\n    PostModal = ({postmodal}) => {\n      if (postmodal === true) {\n        return (\n            <div>\n              <div className=\"modal-edu\">\n                <div className=\"container\">\n                 <div className=\"modal-padding\">\n                  <div className=\"modal-container-color-blue\">\n                   <span className=\"closebtndark\" onClick={() => {\n                       this.setState({\n                           postmodal: false\n                       })\n                   }}>&times;</span>\n                   <h6>{this.state.currentpost.displayName}</h6>\n                   <div className=\"title-padding\">\n                    <h3>{this.state.currentpost.message}</h3>\n                   </div>\n                   <SubPostsComments grouptype={this.props.grouptype} groupid={this.props.groupid} subid={this.props.subid} subgroupid={this.props.subgroupid} subpostid={this.props.subpostid} postid={this.state.currentpost.postid} />\n                  </div>\n                 </div>\n                </div>\n              </div>\n            </div>\n        )\n      } else {\n          return null;\n      }\n    }\n\n    render() {\n        console.log(this.state);\n        return (\n            <div>\n              <div className=\"subpost-page\">\n                <div className=\"float-right\">\n                 <button className=\"button-submit-blue\" onClick={() => {\n                     this.setState({\n                         createpostmodal: true\n                     })\n                 }}>CREATE POST</button>\n                </div>\n                <h3>{this.props.subgroupname + \" Posts\"}</h3>\n                <div className=\"input-container\">\n                 <this.Output/>\n                </div>\n              </div>\n              <this.PostModal postmodal={this.state.postmodal}/>\n              <this.CreatePostSub createpostmodal={this.state.createpostmodal}/>\n              <this.MainGroupFolderSelect maingroupfolder={this.state.maingroupfolder}/>\n            </div>\n        )\n    }\n}\n\nconst SubPostShow = ({subposts\n     , subgroupname,\n      groupid, \n      grouptype ,\n      boxfilerid , \n      maingroupname , \n      subgroupid , \n      subid,\n      subpostid}) => {\n    if (subposts === true) {\n        return (\n            <div>\n                <Subposts \n                 groupboxfilerid={boxfilerid}\n                 groupid={groupid} \n                 grouptype={grouptype}  \n                 subgroupname={subgroupname} \n                 maingroupname={maingroupname}\n                 subgroupid = {subgroupid}\n                 subid = {subid}\n                 subpostid = {subpostid}\n                 />\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default SubPostShow","import React from 'react';\nimport firebase from '../../../ServerSide/basefile';\nimport {generateId} from '../../../ServerSide/functions';\nimport FileView from '../../Authcomps/Group/BoxFiler/Fileview';\nimport axios from 'axios';\nclass SubBoxComments extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filecomment: '',\n            commentres: []\n        }\n    }\n\n    fetchCommentsOnFile = () => {\n        setTimeout(() => {\n            axios.get('https://vincobackend.herokuapp.com/api/subgroup/getcommentsonfile/' + this.props.grouptype + '/' + this.props.groupid + '/' + this.props.subid + '/' + this.props.subgroupid + '/' + this.props.subboxid + '/' + this.props.currentfolderid + '/' + this.props.currentfileid)\n            .then((bod) => {\n                this.setState({\n                    commentres: bod.data\n                })\n            }).catch((error) => {\n                console.log(error);\n            })\n        }, 500);\n    }\n\n    componentDidMount() {\n        this.fetchCommentsOnFile();\n    }\n\n    MakeCommentOnSubPost = () => {\n        const data = {\n            comment: this.state.filecomment,\n            date: new Date(),\n            creator: firebase.auth().currentUser.uid,\n            displayname: firebase.auth().currentUser.displayName,\n            commentid: generateId(54)\n        }\n\n        axios.post('/api/subgroup/commentonfile/' + this.props.grouptype + '/' + this.props.groupid + '/' + this.props.subid + '/' + this.props.subgroupid + '/' + this.props.subboxid + '/' + this.props.currentfolderid + '/' + this.props.currentfileid, data,{\n            headers : {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n        }).then(() => {\n            this.fetchCommentsOnFile();\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n\n    OutputComments = () => {\n        return (\n            <div>\n                {\n                    this.state.commentres.map(item => (\n                        <div key={this.state.commentres.indexOf(item)}>\n                            <div className=\"comment-container\">\n                              <h6 className=\"comment d-inline-flex p-2\">{item.displayname + ': ' + item.comment}</h6>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n              <input type=\"text\" className=\"input-comment-blue\" name=\"filecomment\" placeholder=\"Comment here...\" onChange={(e) => {\n                           this.setState({\n                               [e.target.name] : e.target.value\n                           })\n              }} onKeyDown={(e) => {\n                  if (e.keyCode === 13) {\n                      this.MakeCommentOnSubPost();\n                  }\n              }}/>\n              <this.OutputComments/>\n            </div>\n        )\n    }\n}\n\nclass SubBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            subboxres: [],\n            createfolder: false,\n            createfoldername: '',\n            FileAddModal: false,\n            addfilefoldername: '',\n            currentfolderid: '',\n            currentfile: [],\n            currentfileurl: '',\n            outputfilemodal: false,\n            filecomment: ''\n        }\n    }\n\n    fetchFolders = () => {\n        setTimeout(() => {\n            axios.get('https://vincobackend.herokuapp.com/api/subgroup/getsubfolders/'  + this.props.grouptype + '/' + this.props.groupid + '/' + this.props.subid + '/' + this.props.subgroupid + '/' + this.props.subboxid )\n            .then((bod) => {\n                this.setState({\n                    subboxres: bod.data\n                })\n            }).catch((error) => {\n                console.log(error);\n            })\n        }, 500);\n    }\n\n    componentDidMount() {\n        this.fetchFolders();\n    }\n\n    AddSubFilesModal = ({FileAddModal}) => {\n        if (FileAddModal === true) {\n            return (\n                <div>\n                  <div className=\"modal-edu\">\n                    <div className=\"container\">\n                     <div className=\"modal-padding\">\n                     <div className=\"modal-blue-container\">\n                      <span className=\"closebtnwhite\" onClick={() => {\n                          this.setState({\n                              addModal: false\n                          })\n                      }}>&times;</span>\n                      <h3>{this.state.addfilefoldername}</h3>\n                      <div className=\"input-container\">\n                      <div className=\"drop-box\" onDrop={(e) => {\n                              e.preventDefault();\n                              const files = e.dataTransfer.files;\n                              const filedata = [];\n                              for (let i = 0; i < files.length; i++) {\n                                  const fileid = generateId(98);\n                                  const filejson = {}\n                                  filejson['filename'] = files[i].name;\n                                  filejson['filetype'] = files[i].type;\n                                  filejson['filesize'] = files[i].size;\n                                  filejson['fileid'] = fileid;\n                                  filedata.push(filejson);\n                             }\n\n                              const data = {\n                                  folderid: this.state.currentfolderid,\n                                  filedata: filedata\n                              }\n                              \n                              axios.put('https://vincobackend.herokuapp.com/api/subgroup/addfilessubfolder/' + this.props.grouptype + '/' + this.props.groupid + '/' + this.props.subid + '/' + this.props.subgroupid + '/' + this.props.subboxid + '/' + data.folderid, data,{\n                                  headers: {\n                                    'Accept': 'application/json',\n                                    'Content-Type': 'application/json'\n                                  },\n                              }).then(() => {\n                                      for(let j = 0; j < files.length; j++) {\n                                        firebase.storage().ref(this.props.groupid  + '/' + this.props.subid + '/' + this.props.subgroupid  + '/' + this.props.subboxid + '/' + data.folderid + '/' + files[j].name)\n                                        .put(files[j]);\n                                      }\n\n                                      this.fetchFolders();\n                                  \n                              }).then(() => {\n                                  this.setState({\n                                    FileAddModal: false\n                                  })\n                              }).catch((error) => {\n                                  console.log(error);\n                              })\n                          }} onDragOver={(e) => {\n                            e.preventDefault();\n                            return false\n                          }} onDragLeave={(e) => {\n                              e.preventDefault();\n                              return false\n                          }}>\n                            <div className=\"row\">\n                             <div className=\"col-md-4\">\n                              <h3 className=\"text-center\">DROP FILES HERE</h3>\n                             </div>\n                             <div className=\"col-md-4\">\n                              <h3 className=\"text-center\">OR</h3>\n                             </div>\n                             <div className=\"col-md-4\">\n                              <input type=\"file\" onChange={(e) => {\n                                  const files = e.target.files;\n                                  const filedata = [];\n                                  for (let i = 0; i < files.length; i++) {\n                                      const fileid = generateId(98);\n                                      const filejson = {}\n                                      filejson['filename'] = files[i].name;\n                                      filejson['filetype'] = files[i].type;\n                                      filejson['filesize'] = files[i].size;\n                                      filejson['fileid'] = fileid;\n                                      filedata.push(filejson);\n                                 }\n    \n                                  const data = {\n                                      folderid: this.state.currentfolderid,\n                                      filedata: filedata\n                                  }\n                                  \n                                  axios.put('https://vincobackend.herokuapp.com/api/subgroup/addfilessubfolder/' + this.props.grouptype + '/' + this.props.groupid + '/' + this.props.subid + '/' + this.props.subgroupid + '/' + this.props.subboxid + '/' + data.folderid, data,{\n                                      headers: {\n                                        'Accept': 'application/json',\n                                        'Content-Type': 'application/json'\n                                      },\n                                  }).then(() => {\n                                          for(let j = 0; j < files.length; j++) {\n                                            firebase.storage().ref(this.props.groupid  + '/' + this.props.subid + '/' + this.props.subgroupid  + '/' + this.props.subboxid + '/' + data.folderid + '/' + files[j].name)\n                                            .put(files[j]);\n                                          }\n                                          this.setState({\n                                              FileAddModal: false\n                                          })\n                                                                                 \n                                          this.fetchFolders();\n                                      \n                                  }).catch((error) => {\n                                      console.log(error);\n                                  })\n                              }} multiple/>\n                             </div>\n                            </div>\n                          </div>\n                      </div>\n                     </div>\n                     </div>\n                    </div>\n                  </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n    OutputFolders = () => {\n        return (\n            <div>\n                {\n                     this.state.subboxres.map(item => (\n                        <div key={this.state.subboxres.indexOf(item)}>\n                         <div className=\"folder-component-padding\">\n                         <div className=\"folder-output\">\n                          <div className=\"row\">\n                           <div className=\"col-md-10\" onClick={() => {\n                             const foldername = document.getElementById(item.foldername);\n                             if (foldername.classList.contains('hide') === true) {\n                                 foldername.classList.remove('hide');\n                             } else {\n                                 foldername.classList.add('hide');\n                             }\n                         }}>\n                            <h6 className=\"folder-subheader\">{item.files.length + \" files\"}</h6>\n                            <h4>{item.foldername}</h4>\n                           </div>\n                           <div className=\"col-md-2\">\n                            <div className=\"button-padding\">\n                            <button className=\"button-submit\" onClick={() => {\n                                this.setState({\n                                    FileAddModal: true,\n                                    addfilefoldername: item.foldername,\n                                    currentfolderid: item.folderid\n                                })\n                            }}>ADD FILES</button>\n                            </div>\n                           </div>\n                          </div>\n                         </div>\n                         <div id={item.foldername} className=\"file-components hide\">\n                          {\n                              item.files.map(index => (\n                                  <div key={item.files.indexOf(index)}>\n                                      <div className=\"file-output\" onClick={() => {\n                                        firebase.storage().ref(this.props.groupid  + '/' + this.props.subid + '/' + this.props.subgroupid  + '/' + this.props.subboxid + '/' + item.folderid + '/' + index.filename)\n                                        .getDownloadURL().then((url) => {\n                                            var xhr = new XMLHttpRequest();\n                                            xhr.responseType = 'blob';\n                                            xhr.onload = (event) => {\n                                                var blob = xhr.response;\n                                                console.log(blob)\n                                            };\n                                            xhr.open('GET', url);\n                                            xhr.send();\n                                            this.setState({\n                                                currentfile: index,\n                                                currentfileurl: url,\n                                                outputfilemodal: true,\n                                                currentfolderid: item.folderid\n                                            })\n                                        }).catch((error) => {\n                                            console.log(error);\n                                        })\n                                      }}>\n                                        <h6>{index.filename}</h6>\n                                      </div>\n                                  </div>\n                              ))\n                          }\n                         </div>\n                         </div>\n                        </div>\n                    ))\n                }\n            </div>\n        )\n    }\n\n    OutputFile = ({outputfilemodal}) => {\n        if (outputfilemodal === true) {\n            return (\n                <div>\n                 <div className=\"modal-edu-white\">\n                  <div className=\"container\">\n                   <div className=\"modal-padding\">\n                    <span className=\"closebtndark\" onClick={() => {\n                        this.setState({\n                            outputfilemodal: false\n                        })\n                    }}>&times;</span>\n                    <h3>{this.state.currentfile.filename}</h3>\n                    <div className=\"input-container\">\n                     <div className=\"row\">\n                      <div className=\"col-md-4\">\n                       <SubBoxComments \n                       subid={this.props.subid} \n                       subgroupid={this.props.subgroupid} \n                       grouptype={this.props.grouptype} \n                       subboxid={this.props.subboxid} \n                       groupid = {this.props.groupid}\n                       currentfileid={this.state.currentfile.fileid}\n                       currentfolderid = {this.state.currentfolderid}\n                       />\n                      </div>\n                      <div className=\"col-md-8\">\n                       <FileView url={this.state.currentfileurl} name={this.state.currentfile.filename} type={this.state.currentfile.filetype}/>\n                      </div>\n                     </div>\n                    </div>\n                   </div>\n                  </div>\n                 </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n    CreateFolder = ({createfolder}) => {\n        if (createfolder === true) {\n            return (\n                <div>\n                 <div className=\"modal-edu\">\n                  <div className=\"container\">\n                    <div className=\"modal-padding\">\n                     <div className=\"modal-container-blue\">\n                      <span className=\"closebtnwhite\" onClick={() => {\n                          this.setState({\n                              createfolder: false\n                          })\n                      }}>&times;</span>\n                      <h3>CREATE FOLDER</h3>\n                      <div className=\"input-container\">\n                            <div className=\"group\">      \n                                <input type=\"text\" className=\"inputbar-white\" name=\"createfoldername\" onChange={(e) => {\n                                    this.setState({\n                                    [e.target.name]: e.target.value\n                                    })\n                                }} required />\n                                <span className=\"highlight-white\"></span>\n                                <span className=\"bar-white\"></span>\n                                <label className=\"labelbar-white\">Name of the Folder</label>\n                            </div>\n                      </div>\n                      <div>\n                      <div className=\"drop-box\" onDrop={(e) => {\n                              e.preventDefault();\n                              const files = e.dataTransfer.files;\n                                  const filedata = [];\n                                  for (let i = 0; i < files.length; i++) {\n                                      const fileid = generateId(98);\n                                      const filejson = {}\n                                      filejson['filename'] = files[i].name;\n                                      filejson['filetype'] = files[i].type;\n                                      filejson['filesize'] = files[i].size;\n                                      filejson['fileid'] = fileid\n                                      filedata.push(filejson);\n                                 }\n\n                                  const folderid = generateId(50);\n\n                                  const data = {\n                                      foldername: this.state.foldername,\n                                      folderid: folderid,\n                                      filedata: filedata\n                                  }\n                                  \n                                  axios.put('https://vincobackend.herokuapp.com/api/subgroup/createsubfolder/'  + this.props.grouptype + '/' + this.props.groupid + '/' + this.props.subid + '/' + this.props.subgroupid + '/' + this.props.subboxid, data,{\n                                      headers: {\n                                        'Accept': 'application/json',\n                                        'Content-Type': 'application/json'\n                                      },\n                                  }).then(() => {\n                                        for (let j = 0; j < files.length; j++) {\n                                            firebase.storage().ref(this.props.groupid  + '/' + this.props.subid + '/' + this.props.subgroupid  + '/' + this.props.subboxid + '/' + data.folderid + '/' + files[j].name)\n                                            .put(files[j]);\n                                        }         \n                                        \n                                        this.fetchFolders();\n                                  }).catch((error) => {\n                                      console.log(error);\n                                  })\n                          }} onDragOver={(e) => {\n                            e.preventDefault();\n                            return false\n                          }} onDragLeave={(e) => {\n                              e.preventDefault();\n                              return false\n                          }}>\n                            <div className=\"row\">\n                             <div className=\"col-md-4\">\n                              <h3 className=\"text-center\">DROP FILES HERE</h3>\n                             </div>\n                             <div className=\"col-md-4\">\n                              <h3 className=\"text-center\">OR</h3>\n                             </div>\n                             <div className=\"col-md-4\">\n                              <input type=\"file\" onChange={(e) => {\n                                  const files = e.target.files;\n                                  const filedata = [];\n                                  for (let i = 0; i < files.length; i++) {\n                                      const fileid = generateId(98);\n                                      const filejson = {}\n                                      filejson['filename'] = files[i].name;\n                                      filejson['filetype'] = files[i].type;\n                                      filejson['filesize'] = files[i].size;\n                                      filejson['fileid'] = fileid\n                                      filedata.push(filejson);\n                                 }\n\n                                  const folderid = generateId(50);\n\n                                  const data = {\n                                      foldername: this.state.createfoldername,\n                                      folderid: folderid,\n                                      filedata: filedata\n                                  }\n                                  \n                                  axios.put('https://vincobackend.herokuapp.com/api/subgroup/createsubfolder/'  + this.props.grouptype + '/' + this.props.groupid + '/' + this.props.subid + '/' + this.props.subgroupid + '/' + this.props.subboxid, data,{\n                                      headers: {\n                                        'Accept': 'application/json',\n                                        'Content-Type': 'application/json'\n                                      },\n                                  }).then(() => {\n                                        for (let j = 0; j < files.length; j++) {\n                                            firebase.storage().ref(this.props.groupid  + '/' + this.props.subid + '/' + this.props.subgroupid  + '/' + this.props.subboxid + '/' + data.folderid + '/' + files[j].name)\n                                            .put(files[j]);\n                                        }                   \n                                        \n                                        this.fetchFolders();\n                                  }).catch((error) => {\n                                      console.log(error);\n                                  })\n\n                              }} multiple/>\n                             </div>\n                            </div>\n                          </div>\n                      </div>\n                     </div>\n                    </div>\n                  </div>\n                 </div>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        console.log(this.state);\n        return (\n            <div>\n             <div className=\"sub-box\">\n              <div className=\"float-right\">\n               <button className=\"button-submit-blue\" onClick={() => {\n                   this.setState({\n                       createfolder: true\n                   })\n               }}>CREATE FOLDER</button>\n              </div>\n              <h3>{this.props.subgroupname + ' Box'}</h3>\n              <div className=\"input-container\">\n               <this.OutputFolders/>\n              </div>\n             </div>\n             <this.CreateFolder createfolder={this.state.createfolder}/>\n             <this.AddSubFilesModal FileAddModal={this.state.FileAddModal}/>\n             <this.OutputFile outputfilemodal={this.state.outputfilemodal}/>\n            </div>\n        )\n    }\n}\n\nconst SubShowBox = ({\n    subboxshow,\n    subgroupname, \n    subid,\n    subgroupid,\n    grouptype, \n    subboxid,\n    maingroupname,\n    groupid,\n    }) => {\n    if (subboxshow === true) {\n        return (\n            <div>\n             <SubBox \n             subgroupname={subgroupname} \n             subid={subid} \n             subgroupid={subgroupid} \n             grouptype={grouptype} \n             subboxid={subboxid} \n             maingroupname={maingroupname} \n             groupid = {groupid}/>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default SubShowBox;","import React from 'react';\nimport Authnav from '../Authnav';\nimport SubPostShow from './Subposts'\nimport SubShowBox from './SubBox'\nimport axios from 'axios';\nclass SubHome extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            subres: [],\n            subpost: true,\n            subbox: false\n        }\n    }\n\n   async componentDidMount() {\n      const {mainapi} = this.props.match.params;\n      const {subapi} = this.props.match.params;\n      const {grouptype} = this.props.match.params;\n\n    await axios.get('https://vincobackend.herokuapp.com/api/subgroup/getcreds/' + grouptype + '/' + mainapi + '/' + subapi)\n      .then((body) => {\n          this.setState({\n              subres: body.data\n          })\n      }).catch((error) => {\n          console.log(error)\n      })\n    }\n\n    render() {\n        console.log(this.state);\n        return (\n            <div>\n              <Authnav/>\n              <div className=\"page\">\n               <div className=\"subgroup-nav\">\n                <div className=\"container\">\n                <div className=\"float-right\">\n                <div className=\"row\">\n                   <div className=\"col-md-4\">\n                     <h6 className=\"text-center\" onClick={() => {\n                       this.setState({\n                         subpost: true,\n                         subbox: false\n                       })\n                     }}>POSTS</h6>\n                   </div>\n                   <div className=\"col-md-4\">\n                     <h6 className=\"text-center\" onClick={() => {\n                       this.setState({\n                         subpost: false,\n                         subbox: true\n                       })\n                     }}>BOX</h6>\n                   </div>\n                   <div className=\"col-md-4\">\n                     <h6 className=\"text-center\">CHATS</h6>\n                   </div>\n                 </div> \n                </div>\n                <h5>{this.state.subres.subgroupname}</h5>\n                </div>\n               </div>\n               <div className=\"subgroup\">\n                <div className=\"container\">\n                 <SubPostShow \n                  subposts={this.state.subpost}\n                  subgroupname={this.state.subres.subgroupname}\n                  grouptype={this.state.subres.grouptype}\n                  groupid={this.state.subres.groupid}\n                  boxfilerid={this.state.subres.mainboxfilerid}\n                  maingroupname={this.state.subres.maingroupname}\n                  subgroupid={this.state.subres.subgroupid}\n                  subid={this.state.subres.subid}\n                  subpostid={this.state.subres.subgrouppost}\n                  />\n                  <SubShowBox \n                  subboxshow={this.state.subbox}\n                  subgroupname={this.state.subres.subgroupname}\n                  subid={this.state.subres.subid}\n                  subgroupid={this.state.subres.subgroupid}\n                  grouptype={this.state.subres.grouptype}\n                  subboxid={this.state.subres.subboxfilerid}\n                  groupid={this.state.subres.groupid}\n                  />\n                </div>\n               </div>\n              </div>\n            </div>\n        )\n    }\n}\n\nexport default SubHome;","import React, {useEffect, useState, useRef} from 'react';\nimport AuthNav from '../Authnav';\nimport axios from 'axios';\nconst ConnectionPage = (props) => {\n\n    const [connectionresponse, setConnectionResponse] = useState({\n        connectionresponse: []\n    })\n    \n    const componentMounted = useRef(null);\n    useEffect(() => {\n     componentMounted.current = true;\n        if (componentMounted.current) {\n            if (props.match.params.connectionapi !== null) {\n            axios.get('https://vincobackend.herokuapp.com/connection/fetchconnectioncredentials/' + props.match.params.connectionapi)\n            .then((body) => {\n                setConnectionResponse({\n                    connectionresponse: body.data\n                })\n            }).catch((error) => {\n                console.log(error)\n            })\n          }\n         }\n\n     return () => {componentMounted.current = false} \n    }, [props.match.params.connectionapi])\n\n    console.log(connectionresponse.connectionresponse.connectionname);\n\n    return (\n     <div>\n     <AuthNav/>\n      <div className=\"page\">\n      <div className=\"connection-page\">\n       <div className=\"container\">\n        <h4>{connectionresponse.connectionresponse.connectionname}</h4>\n        <div className=\"connection-navigation\">\n         <div className=\"float-left\">\n         <div className=\"row\">\n          <div className=\"col-md-4\">\n           <h5 className=\"text-center\">POSTS</h5>\n          </div>\n          <div className=\"col-md-4\">\n           <h5 className=\"text-center\">FILES</h5>\n          </div>\n          <div className=\"col-md-4\">\n           <h5 className=\"text-center\">TEAMS</h5>\n          </div>\n         </div>\n         </div>\n        </div>\n       </div>\n      </div>\n      </div>\n     </div>\n    )\n}\n\nexport default ConnectionPage;","import React, {useState, useEffect, useRef} from 'react';\nimport './App.css';\nimport {HashRouter , Route} from 'react-router-dom';\nimport Home from './NonAuth/Home';\nimport Login from './NonAuth/Login';\nimport firebase from './ServerSide/basefile';\nimport PrivateRoute from './ServerSide/PrivateRoute';\nimport Dash from './Auth/Dash';\nimport Search from './Auth/Search';\nimport Register from './NonAuth/Register';\nimport Group from './Auth/Authcomps/Group/Group';\nimport Pendinggroups from './Auth/Pendinggroups';\nimport SubHome from './Auth/Authcomps/Subgroup/SubHome';\nimport ConnectionPage from './Auth/Authcomps/Connections/Connectionpage';\n\nconst App = () => {\n  const [auth, setAuth] = useState({\n    auth: false\n  })\n  const componentDidMount = useRef(false);\n  useEffect(() => {\n    componentDidMount.current = true\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n       if(componentDidMount.current) {\n        setAuth({\n          auth: true\n        })\n       } else {\n         setAuth({\n           auth: false\n         })\n       }\n      } else {\n        setAuth({\n          auth: false\n        })\n      }\n    })\n  }, [])\n\n  return (\n    <div>\n      <HashRouter basename=\"/\">\n        <Route path=\"/\" component={Home} exact/>\n        <Route path=\"/Login\" component={Login} exact/>\n        <Route path=\"/Register\" component={Register} exact/>\n        <PrivateRoute path=\"/dash\" component={Dash} isAuthenticated={auth.auth} exact/>\n        <PrivateRoute path=\"/search\" component={Search} isAuthenticated={auth.auth} exact/>\n        <PrivateRoute path=\"/group/:groupapi\" component={Group} isAuthenticated={auth.auth} exact/>\n        <PrivateRoute path=\"/pending\" component={Pendinggroups} isAuthenticated={auth.auth} exact/>\n        <PrivateRoute path=\"/subgroup/:grouptype/:mainapi/:subapi\" component={SubHome} isAuthenticated={auth.auth} exact/>\n        <PrivateRoute path=\"/connection/:connectionapi\" component={ConnectionPage} isAuthenticated={auth.auth} exact/>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}